<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>开学啦</title>
      <link href="//50459.html"/>
      <url>//50459.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Egger-晚安"><a href="#Egger-晚安" class="headerlink" title="Egger~ 晚安~"></a>Egger~ 晚安~</h1>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>晚安，暑假。</title>
      <link href="//16174.html"/>
      <url>//16174.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="以此版面，纪念棒棒和蛋蛋的暑假"><a href="#以此版面，纪念棒棒和蛋蛋的暑假" class="headerlink" title="以此版面，纪念棒棒和蛋蛋的暑假"></a>以此版面，纪念棒棒和蛋蛋的暑假</h1><h3 id="22日开学，蛋蛋返回ct，迎接新的班级"><a href="#22日开学，蛋蛋返回ct，迎接新的班级" class="headerlink" title="22日开学，蛋蛋返回ct，迎接新的班级"></a>22日开学，蛋蛋返回ct，迎接新的班级</h3><h3 id="22日开学，棒棒返回xz，仍然是旧的班级"><a href="#22日开学，棒棒返回xz，仍然是旧的班级" class="headerlink" title="22日开学，棒棒返回xz，仍然是旧的班级"></a>22日开学，棒棒返回xz，仍然是旧的班级</h3><h1 id="祝WE："><a href="#祝WE：" class="headerlink" title="祝WE："></a>祝WE：</h1><p><img src="https://cdn.jsdelivr.net/gh/HenryHe613/Pic/-1390881811.jpg"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>9月26日周末摘记</title>
      <link href="//29825.html"/>
      <url>//29825.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="英语摘记"><a href="#英语摘记" class="headerlink" title="英语摘记"></a>英语摘记</h1><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/0dd141e25a0a9.png"></p><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/fb9eec76e5edb.png"></p><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/e72e9f3c01908.png"></p><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/2ac633957972e.png"></p><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/6118596577eaa.png"></p><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/a1097edcc4530.png"></p><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/4707fe6ebd44a.png"></p><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/14f208ebd154d.png"></p><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/3bf87c5f762cf.png"></p><h1 id="语文摘记"><a href="#语文摘记" class="headerlink" title="语文摘记"></a>语文摘记</h1><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/b587384a370ba.png"></p><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/98fa55f35249d.png"></p><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/4fe5e9e5d1266.png"></p><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/7097457adc070.png"></p><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/879be7c53a949.png"></p><p><img src="https://pic.baixiongz.com/uploads/2020/09/26/d417661de635a.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown常用语法</title>
      <link href="//1695.html"/>
      <url>//1695.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MarkDown常用语法"><a href="#MarkDown常用语法" class="headerlink" title="MarkDown常用语法"></a>MarkDown常用语法</h1><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">一级标题</span></span><br><span class="line"><span class="section">===</span></span><br><span class="line"><span class="section">二级标题</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><ul><li>无序列表 1</li><li>无序列表 2</li><li>无序列表 3</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">+</span> 无序列表 1</span><br><span class="line"><span class="bullet">+</span> 无序列表 2</span><br><span class="line"><span class="bullet">+</span> 无序列表 3</span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> 无序列表 1</span><br><span class="line"><span class="bullet">*</span> 无序列表 2</span><br><span class="line"><span class="bullet">*</span> 无序列表 3</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 无序列表 1</span><br><span class="line"><span class="bullet">-</span> 无序列表 2</span><br><span class="line"><span class="bullet">-</span> 无序列表 3</span><br></pre></td></tr></table></figure><ol><li>有序列表 1</li><li>有序列表 2</li><li>有序列表 3</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 有序列表 1</span><br><span class="line"><span class="bullet">2.</span> 有序列表 2</span><br><span class="line"><span class="bullet">3.</span> 有序列表 3</span><br></pre></td></tr></table></figure><p><em>斜体</em><br><strong>粗体</strong><br><strong><em>粗体斜体</em></strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span></span><br><span class="line"><span class="strong">**粗体**</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*粗体斜体<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">_斜体_</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="strong">__粗体__</span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="strong">__<span class="emphasis">_粗体斜体<span class="strong">__<span class="emphasis">_</span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure><p><del>删除线</del></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我是代码块</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```我是markdown语言</span></span><br><span class="line"><span class="code">我是代码块</span></span><br></pre></td></tr></table></figure><p>```</p>]]></content>
      
      
      <categories>
          
          <category> Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美化CMD</title>
      <link href="//ay84.html"/>
      <url>//ay84.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="先看效果图"><a href="#先看效果图" class="headerlink" title="先看效果图"></a>先看效果图</h1><p><img src="https://pic.baixiongz.com/2020/08/12/c437f844dce8c.png"></p><p>这个<code>Windows Terminal</code>在美化<code>PowerShell</code>和<code>CMD</code>的同时，还可以用标签的方式集合多个命令行窗口。</p><h1 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h1><p>打开<code>Microsoft Store</code></p><p><img src="https://pic.baixiongz.com/2020/08/12/604eef4f46dbf.png"></p><p>右上角搜索<code>Terminal</code>。</p><p><img src="https://pic.baixiongz.com/2020/08/12/a17685c225948.png"></p><p><img src="https://pic.baixiongz.com/2020/08/12/99b50bb81d26e.png"></p><p>点击<code>获取</code>。当然，我安装过了，所以会显示<code>启动</code>。</p><p><img src="https://pic.baixiongz.com/2020/08/12/b1a8bb46b2136.png"></p><p>但是，你打开了<code>Terminal</code>之后，会发现和原来的命令行没什么两样哇！底色还是黑的。</p><h1 id="美化方法"><a href="#美化方法" class="headerlink" title="美化方法"></a>美化方法</h1><p>在Terminal的导航栏内，点击<code>Ⅴ</code>图标，找到<code>设置</code>。这时候会弹出代码编辑。</p><p><img src="https://pic.baixiongz.com/2020/08/12/af87718c7ba5e.png"></p><p>大约在30行的下方，添加如下代码：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;useAcrylic&quot;</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">&quot;acrylicOpacity&quot;</span>: <span class="number">0.5</span></span><br></pre></td></tr></table></figure><p>添加后的效果如下：</p><p><img src="https://pic.baixiongz.com/2020/08/12/61ca48daad81c.png"></p><p><code>Ctrl</code>+<code>S</code>保存一下，打开<code>Terminal</code>，就出现了亚克力效果。</p><p>如果要更透明一点，可以把<code>acrylicOpacity</code>的值调的小一点。但是不宜过小。0.1的时候效果就像下面一样了：</p><p><img src="https://pic.baixiongz.com/2020/08/12/faa1334a33309.png"></p><p>当然调的大一点没关系。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>发现Gridea这块新大陆</title>
      <link href="//238e.html"/>
      <url>//238e.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天没时间了，先上我的Blog2</p><p><a href="https://henryhe613.github.io/blog3/">南岩的另一个Blog</a></p><h1 id="安装Gridea"><a href="#安装Gridea" class="headerlink" title="安装Gridea"></a>安装Gridea</h1><p>下载地址<a href="https://gridea.dev/#started">传送门</a></p><p><img src="https://pic.baixiongz.com/2020/08/11/beeae347cd2c5.png"></p><p>这个默认下载地址贼慢，还是选用国内Gitee的地址好。就算我用IDM也只有这么一点。不对，为什么是0KB/s？？？</p><p><img src="https://pic.baixiongz.com/2020/08/11/d587f8edb8006.png"></p><p>不够Gitee也恶心，不能多线程下载。</p><p><img src="https://pic.baixiongz.com/2020/08/11/09d04ad164edb.png"></p><p>Gitee真的比GitHub还慢。。</p><p><img src="https://pic.baixiongz.com/2020/08/11/a445a89c57c3f.png"></p><p>下载完之后安装就不用多说了，一路Next就好了。</p><h1 id="配置Gridea"><a href="#配置Gridea" class="headerlink" title="配置Gridea"></a>配置Gridea</h1><h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h2><p>如果你用Coding Pages来部署Gridea的博客的话，会比Github Pages快一点。也不能说快很多，毕竟Coding Pages对电信用户比较友好。</p><p>但是Coding Pages有一点没有Github Pages好，就是它有静态文件大小限制。在我上次使用Hexo + Coding Pages时限制为128MB（好抠）。现在听说已经放宽到256MB，不过也有点小，图片得记得外链放图床上。</p><p>现在Coding上创建一个仓库，名为Gridea。</p><p><img src="https://pic.baixiongz.com/2020/08/11/cbcf3d840b30c.png"></p><blockquote><p>注意：要公开源代码！！不然Gridea会找不到的。鬼知道我在这上面浪费了多少时间。同时记得要用模板初始化一下，模板可以任意，JAVA都行的。</p></blockquote><p>然后我们去<code>持续部署</code>-<code>静态网站</code>-<code>新建</code>一个Pages。</p><p><img src="https://pic.baixiongz.com/2020/08/11/880bd7d601ddd.png"></p><p>网站名称叫做Gridea，记得把<code>部署来源</code>选择正确。填写正确之后，选择<code>保存</code>。</p><p><img src="https://pic.baixiongz.com/2020/08/11/3bbdb07a31e68.png"></p><p>点击一下现在部署，等待部署成功后，把<code>访问地址</code>复制下来，贴到Gridea上面。</p><p><img src="https://pic.baixiongz.com/2020/08/11/847c926848619.png"></p><p>记得把<code>http://</code>给删掉！！！</p><p><img src="https://pic.baixiongz.com/2020/08/11/9fc018196e997.png"></p><p>接下来去个人界面新建一个<code>访问令牌</code>，命名为Gridea。</p><p><img src="https://pic.baixiongz.com/2020/08/11/37fc747ab4358.png"></p><p>带上<code>project:depot</code>权限，以便Gridea可以上传至Coding的仓库。</p><p><img src="https://pic.baixiongz.com/2020/08/11/2571d09d4ae4c.png"></p><p>别忘了输入密码哇！！！</p><p><img src="https://pic.baixiongz.com/2020/08/11/5a33e3c1cbdce.png"></p><p>接下来复制显示的Token，保管好。因为它以后不会再出现了。</p><p>然后我们找到令牌用户名，这个用户名时永久不变的。把它和Token一起输入到Gridea客户端里。</p><p><img src="https://pic.baixiongz.com/2020/08/11/296cde983d2ef.png"></p><blockquote><p>这个Gridea和Coding实在是太不友好了。名字取得太变态了。这点接下来就讲。</p></blockquote><p>我看了官方文档里的视频<a href="https://www.bilibili.com/video/BV1dV41167HE">传送门</a></p><p>MD，这个视频里面也不对劲。</p><p><code>仓库用户名</code>应该是<code>团队名称</code>。我的团队是<code>atasgayb.coding.net</code>，<code>团队名称</code>一般就是<code>atasgayb</code>。当然也有特殊情况，你注册的时候<code>团队域名</code>和<code>团队名称</code>填得不一样。这时候要以<code>团队域名</code>的为准。</p><p>然后我把视频里面的正确说法再复述一遍。Gridea里面的<code>仓库名称</code>不是<code>仓库名称</code>，应该是<code>项目名称/仓库名称</code>。最好大小写也要对应。</p><p>最后的效果应该是这样的。点击左下角的<code>检测远程连接</code>，如果弹出</p><p><img src="https://pic.baixiongz.com/2020/08/11/cbef95b52a105.png"></p><p>点击左下角的<code>检测远程连接</code>，如果弹出成功，就OK了。别忘了点击右下角的<code>保存</code>。</p><p><img src="https://pic.baixiongz.com/2020/08/11/cf3cc0a292663.png"></p><h1 id="文章创作"><a href="#文章创作" class="headerlink" title="文章创作"></a>文章创作</h1><p>记得要用<code>Markdown</code>语法哦，</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matery主题优化</title>
      <link href="//e978.html"/>
      <url>//e978.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script type="text/javascript" src="http://ip.chinaz.com/getip.aspx"></script><div style="background-color: #b7b1f2;">你的IP:<script src="//pv.sohu.com/cityjson?ie=utf-8"></script>                   <script type="text/javascript">                    document.write(returnCitySN["cip"])                   </script></div><div style="background-color: #b7b1f2;">你的IP:<script src="//pv.sohu.com/cityjson?ie=utf-8"></script>                   <script type="text/javascript">                    document.write(returnCitySN["cname"])                   </script></div><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p>简单提一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">npm install hexo --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h1 id="克隆Matery主题"><a href="#克隆Matery主题" class="headerlink" title="克隆Matery主题"></a>克隆Matery主题</h1><h2 id="安装最新版（较不稳定）"><a href="#安装最新版（较不稳定）" class="headerlink" title="安装最新版（较不稳定）"></a>安装最新版（较不稳定）</h2><p>直接安装最新版，就直接<code>Clone</code>。不过<code>Github</code>会有点慢的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/blinkfox/hexo-theme-matery.git themes/matery</span><br></pre></td></tr></table></figure><h2 id="安装稳定版"><a href="#安装稳定版" class="headerlink" title="安装稳定版"></a>安装稳定版</h2><p><a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">点击下载</a></p><p>下载下来的<code>ZIP</code>解压放到<code>themes</code>文件夹中</p><blockquote><p>Clone下来的文件会带有<code>.git</code>仓库，所以如果你要把源文件上传<code>Github</code>、<code>Coding</code>、<code>Gitee</code>的话，需要删除<code>Matery</code>主题文件下的<code>.git</code>仓库</p></blockquote><h1 id="Matery官方优化方案"><a href="#Matery官方优化方案" class="headerlink" title="Matery官方优化方案"></a>Matery官方优化方案</h1><p><a href="http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">原文地址</a></p><p><a href="/post/a57e.html">本站镜像地址</a></p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><blockquote><p>南岩的补充：不太推荐使用<code>Gitalk</code>，国内速度不是很理想，还得需要<code>Github</code>账户，这让许多没有<code>Github</code>账户的网页来说很不方便。我比较倾向于<code>Valine</code>，如需配置，可以参考我的文章<a href="https://www.yelow.ga/post/942c.html">传送门</a></p></blockquote><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>当你看到这里的时候，应该已经有一个自己的 <a href="https://hexo.io/zh-cn/">Hexo</a> 博客了。如果还没有的话，不妨使用 Hexo 和 <a href="https://www.appinn.com/markdown/">Markdown</a> 来写博客和文章。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>Git clone</code> 命令来下载:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/blinkfox/hexo-theme-matery.git</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 17:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;categories&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;categories&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 18:23:38</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;about&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">about</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 17:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;about&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;about&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;contact&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">contact</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 17:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;contact&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;contact&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="新建友情链接-friends-页（可选的）"><a href="#新建友情链接-friends-页（可选的）" class="headerlink" title="新建友情链接 friends 页（可选的）"></a>新建友情链接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;friends&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">friends</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-12-12 21:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;friends&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;friends&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[&#123;</span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span>: <span class="string">&quot;http://image.luokangyuan.com/1_qq_27922023.jpg&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;码酱&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;introduction&quot;</span>: <span class="string">&quot;我不是大佬，只是在追寻大佬的脚步&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://luokangyuan.com/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;前去学习&quot;</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span>: <span class="string">&quot;http://image.luokangyuan.com/4027734.jpeg&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;闪烁之狐&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;introduction&quot;</span>: <span class="string">&quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;https://blinkfox.github.io/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;前去学习&quot;</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span>: <span class="string">&quot;http://image.luokangyuan.com/avatar.jpg&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;ja_rome&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;introduction&quot;</span>: <span class="string">&quot;平凡的脚步也可以走出伟大的行程&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;https://me.csdn.net/jlh912008548&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;前去学习&quot;</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><h3 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h3><h4 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon."></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)<br>2.图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找   </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Index:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">Tags:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/tags</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">Categories:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/categories</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-bookmark</span></span><br><span class="line">  <span class="attr">Archives:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/archives</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">About:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/about</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-user-circle</span></span><br><span class="line">  <span class="attr">Friends:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/friends</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-address-book</span></span><br></pre></td></tr></table></figure><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作<br>1.在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)<br>2.在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.<br>3.注意每个二级菜单模块前要加 <code>-</code>.<br>4.注意缩进格式  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Index:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">Tags:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/tags</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">Categories:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/categories</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-bookmark</span></span><br><span class="line">  <span class="attr">Archives:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/archives</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">About:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/about</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-user-circle-o</span></span><br><span class="line">  <span class="attr">Friends:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/friends</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-address-book</span></span><br><span class="line">  <span class="attr">Medias:</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-list</span></span><br><span class="line">    <span class="attr">children:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Musics</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/musics</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Movies</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/movies</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-film</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Books</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/books</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-book</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Galleries</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/galleries</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-image</span></span><br></pre></td></tr></table></figure><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -S hexo-prism-plugin</span><br></pre></td></tr></table></figure><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">prism_plugin:</span></span><br><span class="line">  <span class="attr">mode:</span> <span class="string">&#x27;preprocess&#x27;</span>    <span class="comment"># realtime/preprocess</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">&#x27;tomorrow&#x27;</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">false</span>    <span class="comment"># default false</span></span><br><span class="line">  <span class="attr">custom_css:</span></span><br></pre></td></tr></table></figure><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br></pre></td></tr></table></figure><h3 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink_pinyin:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">separator:</span> <span class="string">&#x27;-&#x27;</span> <span class="comment"># default: &#x27;-&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">postInfo:</span></span><br><span class="line">  <span class="attr">date:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">update:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">wordCount:</span> <span class="literal">false</span> <span class="comment"># 设置文章字数统计为 true.</span></span><br><span class="line">  <span class="attr">totalCount:</span> <span class="literal">false</span> <span class="comment"># 设置站点文章总字数统计为 true.</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">false</span> <span class="comment"># 阅读时长.</span></span><br><span class="line">  <span class="attr">readCount:</span> <span class="literal">false</span> <span class="comment"># 阅读次数.</span></span><br></pre></td></tr></table></figure><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-github-emojis --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">githubEmojis:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">className:</span> <span class="string">github-emoji</span></span><br><span class="line">  <span class="attr">inject:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">styles:</span></span><br><span class="line">  <span class="attr">customEmojis:</span></span><br></pre></td></tr></table></figure><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></table></figure><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="添加-DaoVoice-在线聊天功能（可选的）"><a href="#添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="添加 DaoVoice 在线聊天功能（可选的）"></a>添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="添加-Tidio-在线聊天功能（可选的）"><a href="#添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="添加 Tidio 在线聊天功能（可选的）"></a>添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.socialLink.github) &#123; %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%= theme.socialLink.github %&gt;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tooltipped&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">data-tooltip</span>=<span class="string">&quot;访问我的GitHub&quot;</span> <span class="attr">data-position</span>=<span class="string">&quot;top&quot;</span> <span class="attr">data-delay</span>=<span class="string">&quot;50&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-github&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否在首页显示音乐</span></span><br><span class="line"><span class="attr">music:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">title:</span>         <span class="comment">#非吸底模式有效</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">show:</span> <span class="string">听听音乐</span></span><br><span class="line">  <span class="attr">server:</span> <span class="string">netease</span>   <span class="comment">#require music platform: netease, tencent, kugou, xiami, baidu</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">playlist</span>    <span class="comment">#require song, playlist, album, search, artist</span></span><br><span class="line">  <span class="attr">id:</span> <span class="number">503838841</span>     <span class="comment">#require song id / playlist id / album id / search keyword</span></span><br><span class="line">  <span class="attr">fixed:</span> <span class="literal">false</span>      <span class="comment"># 开启吸底模式</span></span><br><span class="line">  <span class="attr">autoplay:</span> <span class="literal">false</span>   <span class="comment"># 是否自动播放</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">&#x27;#42b983&#x27;</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="string">&#x27;all&#x27;</span>       <span class="comment"># 音频循环播放, 可选值: &#x27;all&#x27;, &#x27;one&#x27;, &#x27;none&#x27;</span></span><br><span class="line">  <span class="attr">order:</span> <span class="string">&#x27;random&#x27;</span>   <span class="comment"># 音频循环顺序, 可选值: &#x27;list&#x27;, &#x27;random&#x27;</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="string">&#x27;auto&#x27;</span>   <span class="comment"># 预加载，可选值: &#x27;none&#x27;, &#x27;metadata&#x27;, &#x27;auto&#x27;</span></span><br><span class="line">  <span class="attr">volume:</span> <span class="number">0.7</span>       <span class="comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span></span><br><span class="line">  <span class="attr">listFolded:</span> <span class="literal">true</span>  <span class="comment"># 列表默认折叠</span></span><br></pre></td></tr></table></figure><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code>获取示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，地址栏有一串数字，<code>playlist</code>的<code>id</code>即为这串数字。</p></blockquote><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">typora-vue-theme主题介绍</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-07 09:25:00</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">typora-vue-theme主题介绍</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-07 09:25:00</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">赵奇</span></span><br><span class="line"><span class="attr">img:</span> <span class="string">/source/images/xxx.jpg</span></span><br><span class="line"><span class="attr">top:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">cover:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">coverImg:</span> <span class="string">/images/1.jpg</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">summary:</span> <span class="string">这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Markdown</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Typora</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Markdown</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span></span><br><span class="line"><span class="selector-class">.bg-color</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right, <span class="number">#4cbf30</span> <span class="number">0%</span>, <span class="number">#0f9d58</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> rainbow &#123;</span><br><span class="line">   <span class="comment">/* 动态切换背景颜色. */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> rainbow &#123;</span><br><span class="line">    <span class="comment">/* 动态切换背景颜色. */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.bg-cover&#x27;</span>).css(<span class="string">&#x27;background-image&#x27;</span>, <span class="string">&#x27;url(/medias/banner/&#x27;</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getDay() + <span class="string">&#x27;.jpg)&#x27;</span>);</span><br></pre></td></tr></table></figure><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CG动画短片：迷失时间</title>
      <link href="//aff7.html"/>
      <url>//aff7.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CG动画短片：迷失时间"><a href="#CG动画短片：迷失时间" class="headerlink" title="CG动画短片：迷失时间"></a>CG动画短片：迷失时间</h1><blockquote><p>此视频来源网络，如侵犯版权请联系我：<a href="mailto:&#x61;&#100;&#109;&#x69;&#x6e;&#64;&#121;&#x65;&#x6c;&#x6f;&#x77;&#46;&#x67;&#x61;">&#x61;&#100;&#109;&#x69;&#x6e;&#64;&#121;&#x65;&#x6c;&#x6f;&#x77;&#46;&#x67;&#x61;</a></p></blockquote><div id="mmedia-FsOQanIj"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>      <script>        var dp_FsOQanIj = new DPlayer({            container: document.getElementById('mmedia-FsOQanIj'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://share.yelow.ga/Blog/Videos/2.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp_FsOQanIj.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});              </script>        ]]></content>
      
      
      <categories>
          
          <category> Videos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Videos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超赞获奖动画短片《追光者》</title>
      <link href="//925d.html"/>
      <url>//925d.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="超赞获奖动画短片《追光者》"><a href="#超赞获奖动画短片《追光者》" class="headerlink" title="超赞获奖动画短片《追光者》"></a>超赞获奖动画短片《追光者》</h1><blockquote><p>此视频来源网络，如侵犯版权请联系我：<a href="mailto:&#x61;&#100;&#109;&#105;&#110;&#64;&#121;&#x65;&#x6c;&#x6f;&#119;&#x2e;&#103;&#97;">&#x61;&#100;&#109;&#105;&#110;&#64;&#121;&#x65;&#x6c;&#x6f;&#119;&#x2e;&#103;&#97;</a></p></blockquote><div id="mmedia-SsUOrPjE"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>      <script>        var dp_SsUOrPjE = new DPlayer({            container: document.getElementById('mmedia-SsUOrPjE'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://share.yelow.ga/Blog/Videos/%E6%96%B0%E8%A7%86%E9%A2%91.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp_SsUOrPjE.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});              </script>        ]]></content>
      
      
      <categories>
          
          <category> Videos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Videos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>E5 OneDrive扩容教程</title>
      <link href="//15b.html"/>
      <url>//15b.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="E5-OneDrive扩容教程"><a href="#E5-OneDrive扩容教程" class="headerlink" title="E5 OneDrive扩容教程"></a>E5 OneDrive扩容教程</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我白嫖到了E5开发者的账号，但是OneDrive在网页版里只有最大5TB。</p><p>经过我的了解，OneDrive扩容25TB有以下的要求：</p><ul><li><p>至少有5个正在使用的账户</p></li><li><p>账户的OneDirve使用量达到了90%</p></li></ul><p>我就上传了一个Ubuntu镜像，然后使劲复制复制，成功搞到了4.5TB。然后发来了一份电邮：</p><p><img src="https://pic.baixiongz.com/2020/08/02/99212f4c4f9f6.png" alt="TIM截图20200802110647.png"></p><p>结果是我的储存快满了。我不理这封邮件。</p><h1 id="扩容"><a href="#扩容" class="headerlink" title="扩容"></a>扩容</h1><p>我去找微软客服，提交申请扩容的工单。<a href="https://admin.microsoft.com/AdminPortal/Home#/support/requests">提交地址</a></p><p><img src="https://pic.baixiongz.com/2020/08/02/2556f17710e4a.png"></p><p><img src="https://pic.baixiongz.com/2020/08/02/17688c0945028.png" alt="TIM截图20200802111416.png"></p><p>但是回复是周末扩容工程师放假/害，微软员工真好</p><p>我等到了周二，来了一封邮件。如果你收到了这封邮件，说明你有扩容25TB的权限了。</p><p><img src="https://pic.baixiongz.com/2020/08/02/f5e8a08448dcb.png" alt="TIM截图20200802111011.png"></p><p>还得让我下载软件</p><p>软件我过会儿会放在我的Share站里</p><p>安装完成后，打开PowerShell，也就是升级版的CMD。</p><p>输入以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Connect-SPOService -URL https://&#123;你的组织名称&#125;-admin.sharepoint.com</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>组织名称</code>很好找，你打开网页版的Onedrive，登录自己的E5账号，地址栏上就会有的。比如我的就是<code>atasgayb</code></p><p><img src="https://pic.baixiongz.com/2020/08/02/3fe819e75ceb3.png" alt="TIM截图20200802112711.png"></p><p>输入命令之后，会跳出一个框：</p><p><img src="https://pic.baixiongz.com/2020/08/02/d506cbb827ce0.png" alt="TIM截图20200802112901.png"></p><p>这时用你的管理员账户登录。其他的账户没有扩容的权限。</p><p>稍等片刻，再输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Set-SPOSite -Identity https://&#123;你的组织名称&#125;-my.sharepoint.com/personal/&#123;你的账户名称&#125; -StorageQuota &#123;设置的容量&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>组织名称</code>还是一样的。<code>账户名称</code>是该账户的Email，但是要把email的点改成下划线。<code>设置的容量</code>是以MB计算的。25TB = 26214400</p><p><img src="https://pic.baixiongz.com/2020/08/02/41149454a59ad.png" alt="TIM截图20200802113520.png"></p><p>回车之后什么都没有，但是容量已经扩大了。</p>]]></content>
      
      
      <categories>
          
          <category> Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OneDrive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vercel部署Hexo</title>
      <link href="//42da.html"/>
      <url>//42da.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Vercel真是好。之前想用Travis CI部署博客，但是Travis CI不能用部署私仓，很不舒服。要知道我博客的源文件里也有些不可告人的东西。</p><p>别想多了，也就是Token之类的啦。</p><p>对于Zeit.co这个组织我早有耳闻，但是神奇的发现官网被重定向到了vercel.com。天真的我以为Zeit被攻击了，结果一查才知道这个组织名字改了。。。</p><p>然鹅，我注册Vercel总是不成功。即便我挂梯子，也不行。</p><p>后来经大佬指导，才知道Vercel不能用qq.com的邮箱。我的GitHub绑定的就是qqmail，于是我改成了gmail，这才注册成功。</p><h1 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h1><p><a href="https://vercel.com/">Vercel官网==&gt;传送门</a></p><p>点击右上角<code>Sign Up</code>，</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200725191922.png"></p><p>选择<code>Continue with GitHub</code>，利用GitHub登录。</p><p>之后完善自己的个人信息。</p><p><img src="https://pic.baixiongz.com/2020/08/01/544f4eabeea77.png" alt="TIM截图20200801184544.png"></p><p>这是我的Vercel界面。</p><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="如果你已经有了Hexo的博客"><a href="#如果你已经有了Hexo的博客" class="headerlink" title="如果你已经有了Hexo的博客"></a>如果你已经有了Hexo的博客</h2><p>你可以右上角点击<code>Improt Project</code>，</p><p><img src="https://pic.baixiongz.com/2020/08/01/f7bc4f63046c8.png" alt="TIM截图20200801174641.png"></p><p>然后选择<code>Continue</code>，</p><p><img src="https://pic.baixiongz.com/2020/08/01/bcb810e536350.png" alt="TIM截图20200801174752.png"></p><p>填写你的博客的Git地址。注意，这里要用HTTPS的地址，不能用SSH的地址</p><p><img src="https://pic.baixiongz.com/2020/08/01/544f4eabeea77.png" alt="TIM截图20200801184544.png"></p><p><img src="https://pic.baixiongz.com/2020/08/01/0cc67e5a1b47d.png" alt="TIM截图20200801175155.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vercel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>白嫖党-免费稳定/S/S/R</title>
      <link href="//5af6.html"/>
      <url>//5af6.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="白嫖党-免费稳定-S-S-R"><a href="#白嫖党-免费稳定-S-S-R" class="headerlink" title="白嫖党-免费稳定/S/S/R"></a>白嫖党-免费稳定/S/S/R</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>声明：我没有打广告！没有收一分广告钱！你看我像这样的人吗？</p></blockquote><p>我一直再找Vρn，但是很遗憾，真的很难找到稳定的。</p><p>尤其是现在仍是疫情期间，国外流言蜚语很多，国家对不实消息打击力度很大，所以真的很难找。中国共产党万岁！！！</p><p>还有Vρn的技术真的太老了，G|F|W不用吹灰之力就封了你。服务端的IP立刻就没得用了。</p><p>这时真正的科|学|上|网就得靠SS/SSR/V2ray了</p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><h2 id="关于SSR"><a href="#关于SSR" class="headerlink" title="关于SSR"></a>关于SSR</h2><p>SSR的全称是ShadowSocksR，是SS，即ShadowSocks的升级版。由于SS安全性没有SSR好，所以我不介绍SS的内容。</p><p>我从维基百科上摘了一点有关SSR的内容：</p><p>“Shadowsocks是一个免费的开源 加密协议项目，在中国大陆广泛用于规避Internet审查。它是由一位名叫“ clowwindy”的中国程序员于2012年创建的，此后该协议已实现了多种实现。[4] [5] Shadowsocks本身并不是代理，但是通常，客户端软件将连接到第三方socks5代理，在其运行的计算机上说出shadowsocks语言，然后可以将其定向到互联网流量上。类似于SSH隧道。[6]与SSH隧道不同，shadowsocks也可以代理UDP 交通。”</p><p>如果喜欢Github，那你应该知道SSR的项目已经删除了。</p><p>“2015年8月22日，“ clowwindy”在GitHub线程中宣布，警方已与他们联系，无法再维护该项目。[7]该项目的代码随后分支到了移除通知。[8] [9] [10] [11]三天后的8月25日，另一个代理应用程序GoAgent也删除了其GitHub存储库。[9] [10]项目的撤消引起了媒体的关注，新闻媒体猜测了撤军与针对GitHub 的DDoS之间的可能联系，几天后发生了这种情况。[12] 丹尼·奥布莱恩（Danny O’Brien），来自电子前沿基金会发表了有关此事的声明。[13]</p><p>尽管删除了该项目，但该项目的合作者仍在继续开发该项目。”</p><p>于是，现在SSR仍然能使用，但是安全性和稳定性不能十分保证。</p><h2 id="关于-V2ray"><a href="#关于-V2ray" class="headerlink" title="关于 V2ray"></a>关于 V2ray</h2><p>在Wikipedia上关于V2Ray的内容已被删除，不知是不是gov|er|ment干的事。///如果是的话，Wikipedia自称自由的百科全书就真香了。</p><p>所以我只能大概写一点了惹</p><p>V2Ray是近几年兴起的科学上网技术，采用新的协议，因功能强大、能有效抵抗墙的干扰而广受好评。V2Ray官网是 <a href="https://b2ray.com/">https://v2ray.com</a>，目前已无法直接打开。不过如果你有梯子，还是可以看的。</p><p>V2Ray的优点：</p><ul><li>多入口多出口: 一个 V2Ray 进程可并发支持多个入站和出站协议，每个协议可独立工作。</li><li>可定制化路由: 入站流量可按配置由不同的出口发出。轻松实现按区域或按域名分流，以达到最优的网络性能。</li><li>多协议支持: V2Ray 可同时开启多个协议支持，包括 Socks、HTTP、Shadowsocks、VMess 等。每个协议可单独设置传输载体，比如 TCP、mKCP、WebSocket 等。</li><li>隐蔽性: V2Ray 的节点可以伪装成正常的网站（HTTPS），将其流量与正常的网页流量混淆，以避开第三方干扰。</li><li>反向代理: 通用的反向代理支持，可实现内网穿透功能。</li><li>多平台支持: 原生支持所有常见平台，如 Windows、Mac OS、Linux，并已有第三方支持移动平台。</li></ul><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><p>由于V2Ray的安全性，SSR的主流性，以及SSR多年没有官方更新，网上就有许多整合的工具，便于配置使用。我采用的是V2RayN，SSR也可以连接。</p><p>我放一些工具的下载链接，方便大家下载使用：</p><h2 id="Windows版客户端"><a href="#Windows版客户端" class="headerlink" title="Windows版客户端"></a>Windows版客户端</h2><table><thead><tr><th align="left">名称</th><th align="left">下载地址</th></tr></thead><tbody><tr><td align="left">V2RayN</td><td align="left"><a href="https://pan.baixiongz.com/#/s/ROYMTk">v2rayN-v3.19.zip</a></td></tr><tr><td align="left">V2rayW</td><td align="left"><a href="https://pan.baixiongz.com/#/s/4yEnuB">v2rayW-v1.0.0-beta2.zip</a></td></tr></tbody></table><blockquote><p>忘了告诉你们密码了。我不加密码这个文件会报毒的，不定还会被和谐。<del>密码是：<code>www.yelow.ga</code></del></p><p>我换域名了，所以密码改成<code>nanyan666.com</code>。同时我也换了一个储存的位置，放在了国内，下载会快很多。</p></blockquote><h2 id="Android版客户端"><a href="#Android版客户端" class="headerlink" title="Android版客户端"></a>Android版客户端</h2><table><thead><tr><th align="left">名称</th><th align="left">下载地址</th></tr></thead><tbody><tr><td align="left">V2rayNG</td><td align="left"><a href="https://pan.baixiongz.com/#/s/Yje9iO">v2rayNG-v1.2.13.apk</a></td></tr><tr><td align="left">BifrostV</td><td align="left"><a href="https://pan.baixiongz.com/#/s/MVPGhk">bifrostV-v0.6.8.apk</a></td></tr></tbody></table><h2 id="IOS用户就有点惨了，没有免费的"><a href="#IOS用户就有点惨了，没有免费的" class="headerlink" title="IOS用户就有点惨了，没有免费的"></a>IOS用户就有点惨了，<del>没有免费的</del></h2><p><del>但是可以下载付费的Shadowrocket、pepi、i2Ray、Kitsunebi和Quantumult。不过大陆没法下载，需要大陆外的AppleId。</del></p><p>有的有的，有白飘党就有免费/滑稽（不算真的免费）</p><p>cu加速云已经给了美国APPLEID，可以直接下载。同时也购买Shadowrocket。 APPLEID账号：<code>joe80887336@yahoo.com</code> 密码：<code>Zzh80887336</code>。</p><p>不过下载完成要记得立刻退出，不然你的IOS设备很可能会被恶搞。</p><h1 id="哪里白嫖？？？"><a href="#哪里白嫖？？？" class="headerlink" title="哪里白嫖？？？"></a>哪里白嫖？？？</h1><p>在这里==&gt;<a href="https://www.cuuc.club/">传送门</a></p><p>CU加速云可以每天签到送流量，即便是免费节点，速度也不赖。总比没得用好，对伐？</p><p>我暂时权当你会配置SSR和V2Ray了哇，CU云里面的订阅似乎不能使用，至少我是获取不到任何服务器的。</p><p>但是可以在<code>节点使用</code>里找，里面直接有配置信息的。</p><p>今天有点晚了，水文章到现在。我睡觉觉了。</p><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="V2RayN使用方法"><a href="#V2RayN使用方法" class="headerlink" title="V2RayN使用方法"></a>V2RayN使用方法</h2><p>点击<a href="https://share.yelow.ga/SSR/v2rayN-Core.zip">下载🔗链接</a></p><p>解压之后打开，找到<code>v2rayN.exe</code>，双击运行。</p><p>可能会出现以下的情况，这是要允许，毕竟这个软件无毒的/滑稽脸</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/TIM%E6%88%AA%E5%9B%BE20200725185023.png"></p><p>打开后并没有界面弹出，但是可以看到任务栏右下角已经出现了<code>V</code>字图标：</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/TIM%E6%88%AA%E5%9B%BE20200725185244.png"></p><p>双击这个图标，打开主界面。</p><p>如果你有自己的（或网上白嫖的）SS/SSR/V2Ray服务器，可以直接粘贴链接。链接的样子一般如下：</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200725185500.png"></p><p>复制这些链接，打开主界面就可以直接复制。如果有多个链接，批量复制也是没问题的。</p><p>打开CU加速云，转到<code>节点使用</code>下面的<code>节点列表</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200725185740.png"></p><p>只有最上面的<code>青铜 用户节点</code>可以使用，下面的<code>铂金 用户节点</code>是给VIP用户准备的。</p><p>我们是白嫖来的，先用着免费节点好了。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200725185846.png"></p><p>出于保密///不然我的账号要被封的的哇，原谅一下我哈</p><p>我打了马赛克。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200725190315.png"></p><p>可以直接点击下方的链接复制，然后到V2RayN中粘贴。</p><p>粘贴完成时这样子的：</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200725190441.png"></p><p>默认已经勾选了唯一的服务器，如果要更改，用下面的方法：</p><p>右键V图标，勾选使用的服务器。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200725190552.png"></p><p>然后我们开启全局/PAC模式。</p><p>通俗的讲，全局模式就是让电脑里的所有流量都经过服务器，而PAC让需要的程序，走服务器。</p><p>PAC有俩好处，第一是访问国内网站快，而且还省流量。</p>]]></content>
      
      
      <categories>
          
          <category> Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云免费建网盘</title>
      <link href="//dd57.html"/>
      <url>//dd57.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="阿里云免费建网盘"><a href="#阿里云免费建网盘" class="headerlink" title="阿里云免费建网盘"></a>阿里云免费建网盘</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我白嫖到了微软的25TB储存，但是下载不方便，想用这点容量搭一个网盘。</p><p>考虑到我没有可以使用的云服务器，所需就选择了Oneindex-Serverless。</p><p>看了阿里云官网的Oneindex-serverless搭建文档，踩了好几个坑。<a href="https://developer.aliyun.com/article/711543">官方文档</a></p><p>然鹅阿里云的文章也不是自己写的。阿里嫖了知乎的一篇文章<a href="https://zhuanlan.zhihu.com/p/74538287">传送门</a></p><p><img src="https://s1.ax1x.com/2020/07/12/U3mDvd.jpg" alt="U3mDvd.jpg"></p><p>枯了枯了，网上还有很多文档，但是都是一摸一样的。</p><h1 id="了解Onedrive-Serverless"><a href="#了解Onedrive-Serverless" class="headerlink" title="了解Onedrive-Serverless"></a>了解Onedrive-Serverless</h1><p>Oneindex前段时间被删库了，作者亲自删的，TA也没说为什么。包括Goindex也被删库了。</p><p>Oneindex-Serverless是另一个人做的，仓库地址在这里<a href="https://github.com/LiuChangFreeman/OneIndex-Serverless">https://github.com/LiuChangFreeman/OneIndex-Serverless</a></p><p>Oneindex是基于PHP的，需要PHP空间，像我这种白嫖党是不可能买的，这辈子都不可能 <img src="https://s1.ax1x.com/2020/07/12/U3mR58.jpg" alt="U3mR58.jpg"></p><p>而Oneindex是基于Serverless云函数的，不用PHP空间，对我来说十分有吸引力。</p><h1 id="搭建Onedrive-Serverless"><a href="#搭建Onedrive-Serverless" class="headerlink" title="搭建Onedrive-Serverless"></a>搭建Onedrive-Serverless</h1><h2 id="开通函数计算和对象储存OSS"><a href="#开通函数计算和对象储存OSS" class="headerlink" title="开通函数计算和对象储存OSS"></a>开通函数计算和对象储存OSS</h2><p>注册<a href="https://www.aliyun.com/">阿里云</a></p><p>先开通函数计算和对象储存OSS。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/TIM%E6%88%AA%E5%9B%BE20200712095025.png"></p><h2 id="配置对象储存OSS"><a href="#配置对象储存OSS" class="headerlink" title="配置对象储存OSS"></a>配置对象储存OSS</h2><p>然后我们先到对象储存OSS进行设置。<a href="https://oss.console.aliyun.com/overview">控制台传送门</a></p><p>新建储存桶，Bucket。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/catgretg.jpg"></p><p>然后进行以下配置。注意，要记住<code>区域</code>，之后有用的，然后<code>Bucket名称</code>可以自定义。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/%E6%88%AA%E5%9B%BE20200629182911.png"></p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/%E6%88%AA%E5%9B%BE20200629182923.png"></p><p>然后可以看到关于这个Bucket的<code>概览</code>。记住<code>内网</code>的<code>Endpoint</code>，就在下面的图片红框中。//hh，图片我网上搜了一张，我以前截屏的丢了。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200712095512.png"></p><h2 id="配置access子账户"><a href="#配置access子账户" class="headerlink" title="配置access子账户"></a>配置access子账户</h2><p>右上角选择<code>AccessKey</code>管理，</p><p><img src="https://s1.ax1x.com/2020/07/12/U3mh8g.png" alt="U3mh8g.png"></p><p>先选择<code>创建AccessKey子账户</code>,</p><p><img src="https://s1.ax1x.com/2020/07/12/U3moKs.png" alt="U3moKs.png"></p><p>然后再创建用户，如下图。</p><p><img src="https://s1.ax1x.com/2020/07/12/U3mbV0.png" alt="U3mbV0.png"></p><p>然后自定义下面的内容</p><p><img src="https://s1.ax1x.com/2020/07/12/U3mXPU.png" alt="U3mXPU.png"></p><p>之后添加权限。</p><p><img src="https://s1.ax1x.com/2020/07/12/U3n3i8.png" alt="U3n3i8.png"></p><p>添加<code>AliyunOSSFullAccess</code>权限，添加过后右侧会自动添加权限，然后被添加的权限也会变成淡蓝色。点击下面的<code>确定</code>.</p><p><img src="https://s1.ax1x.com/2020/07/12/U3ntMj.png" alt="U3ntMj.png"></p><p>之后我们去获取AccessKey。</p><p>点击Access账户，即下图蓝色的文字。</p><p><img src="https://s1.ax1x.com/2020/07/12/U3n5FK.png" alt="U3n5FK.png"></p><p>在下方<code>创建AccessKey</code>。然后弹出这样一个框：</p><p><img src="https://s1.ax1x.com/2020/07/12/U3uvu9.png" alt="U3uvu9.png"></p><blockquote><p>ID和SECRET必须保存好，之后它们不会再出现！！！</p></blockquote><h2 id="配置Serverless函数计算"><a href="#配置Serverless函数计算" class="headerlink" title="配置Serverless函数计算"></a>配置Serverless函数计算</h2><p>打开函数计算的控制台<a href="https://fc.console.aliyun.com/fc/overview/">控制台传送门</a></p><blockquote><p>提醒：记得左上角选择和Bucket一样的地域！！！不然serverless不能访问Bucket！！！</p></blockquote><p>新建函数！</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/%E6%88%AA%E5%9B%BE20200629183101.png"></p><p>选择flask-web这个模板，然后下一步。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/%E5%9B%BE%E7%89%8720200629183142.png"></p><p>自定义下面图片红框的内容，最好你自己能够记牢。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/%E6%88%AA%E5%9B%BE20200629183535.png"></p><p>然后我们来配置初始化。</p><p>打开下面的<code>配置</code>.</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200712101145.png"></p><p>进行如下的配置，新建<code>main.initializer</code>函数初始化入口，并把<code>超时时间</code>选最大。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200712101311.png"></p><blockquote><p>注意：右下角还有一个<code>提交</code>！！！别忘了提交，不然不会保存这个设置！！！</p></blockquote><p>然后我们编辑一下代码。按下图打开<code>代码执行管理</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200712101926.png"></p><p>然后把下面的代码复制进去。会很长，但是省的你们去下载了。如果要下载，<del>我过会儿会放我的网盘上哈</del>,我已经放在网盘上了，<del>在这里<a href="https://drive.yelow.ga/#/?path=Public_Source/Blog/dd57">https://drive.yelow.ga/#/?path=Public_Source/Blog/dd57</a>，</del>前面的地址很慢，我又弄了个快一点的/真的只是快了一点点/地址：<a href="https://share.yelow.ga/Blog/dd57/">https://share.yelow.ga/Blog/dd57/</a>文件为Back.zip。记得过会儿Save一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> oss2</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,request,redirect</span><br><span class="line"></span><br><span class="line">password=<span class="string">&quot;123456&quot;</span></span><br><span class="line">url_host= <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">access_key=<span class="string">&#x27;&#x27;</span></span><br><span class="line">access_key_secret=<span class="string">&#x27;&#x27;</span></span><br><span class="line">oss_end_point= <span class="string">&#x27;&#x27;</span></span><br><span class="line">oss_bucket_name=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">path_oss_store= <span class="string">&quot;oneindex-serverless&quot;</span></span><br><span class="line">filename_token= <span class="string">&quot;token.json&quot;</span></span><br><span class="line">items_per_page=<span class="number">50</span></span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">&#x27;oneindex-serverless&#x27;</span></span><br><span class="line"></span><br><span class="line">client_id = <span class="string">&#x27;0375f766-e528-4748-91e2-7d8fcb702889&#x27;</span></span><br><span class="line">client_secret = <span class="string">&#x27;vXOJL93&#123;#?xnotilNIU895:&#x27;</span></span><br><span class="line">redirect_uri_register = <span class="string">&#x27;https://oneindex-serverless.github.io/redirect&#x27;</span></span><br><span class="line">redirect_uri_final = <span class="string">&#x27;&#123;&#125;/login/authorized&#x27;</span>.<span class="built_in">format</span>(url_host.strip(<span class="string">&quot;/&quot;</span>))</span><br><span class="line"></span><br><span class="line">auth = oss2.Auth(access_key,access_key_secret)</span><br><span class="line">bucket = oss2.Bucket(auth, oss_end_point, oss_bucket_name)</span><br><span class="line">base_url=<span class="string">&#x27;https://graph.microsoft.com/v1.0/&#x27;</span></span><br><span class="line">scopes= <span class="string">&quot;offline_access files.readwrite.all&quot;</span></span><br><span class="line">select=<span class="string">&quot;id,name,size,folder,image,video,lastModifiedDateTime&quot;</span></span><br><span class="line"></span><br><span class="line">token=<span class="literal">None</span></span><br><span class="line">oss_available=<span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initializer</span>(<span class="params">context</span>):</span></span><br><span class="line">    init()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handler</span>(<span class="params">environ, start_response</span>):</span></span><br><span class="line">    <span class="keyword">return</span> app(environ, start_response)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">home</span>():</span></span><br><span class="line">    <span class="keyword">if</span> token==<span class="literal">None</span> <span class="keyword">or</span> <span class="string">&quot;account&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> token:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;success&quot;</span>:<span class="literal">False</span>,</span><br><span class="line">            <span class="string">&quot;oss_available&quot;</span>:oss_available</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;success&quot;</span>: <span class="literal">True</span>,</span><br><span class="line">            <span class="string">&quot;account&quot;</span>:token[<span class="string">&quot;account&quot;</span>],</span><br><span class="line">            <span class="string">&quot;oss_available&quot;</span>:oss_available,</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> json.dumps(data)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/verify&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">verify</span>():</span></span><br><span class="line">    code=request.args.get(<span class="string">&quot;code&quot;</span>)</span><br><span class="line">    code=base64.b64decode(code)</span><br><span class="line">    <span class="keyword">if</span> code==password:</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&quot;success&quot;</span>:<span class="literal">True</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&quot;success&quot;</span>:<span class="literal">False</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> json.dumps(data)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">    code=request.args.get(<span class="string">&quot;code&quot;</span>)</span><br><span class="line">    code=base64.b64decode(code)</span><br><span class="line">    final=request.args.get(<span class="string">&quot;final&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> code==password:</span><br><span class="line">        url_login=<span class="string">&quot;https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=&#123;&#125;&amp;scope=&#123;&#125;&amp;response_type=code&amp;redirect_uri=&#123;&#125;&amp;state=&#123;&#125;&quot;</span>.<span class="built_in">format</span>(client_id, urllib.quote(scopes), redirect_uri_register, redirect_uri_final+<span class="string">&quot;*&quot;</span>+final)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_login)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login/authorized&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">authorized</span>():</span></span><br><span class="line">    <span class="keyword">global</span> token</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        code=request.args.get(<span class="string">&quot;code&quot;</span>)</span><br><span class="line">        final = request.args.get(<span class="string">&quot;final&quot;</span>)</span><br><span class="line">        url = <span class="string">&quot;https://login.microsoftonline.com/common/oauth2/v2.0/token&quot;</span></span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        form = <span class="string">&quot;client_id=&#123;&#125;&amp;redirect_uri=&#123;&#125;&amp;client_secret=&#123;&#125;&amp;code=&#123;&#125;&amp;grant_type=authorization_code&quot;</span>.<span class="built_in">format</span>(client_id,redirect_uri_register,client_secret,code)</span><br><span class="line">        token = requests.post(url, headers=headers, data=form).json()</span><br><span class="line">        token[<span class="string">&quot;time&quot;</span>] = time.time()</span><br><span class="line">        path = <span class="string">&quot;me/drive&quot;</span></span><br><span class="line">        url = base_url + path</span><br><span class="line">        access_token = token[<span class="string">&quot;access_token&quot;</span>]</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&quot;Authorization&quot;</span>: <span class="string">&quot;bearer &#123;&#125;&quot;</span>.<span class="built_in">format</span>(access_token),</span><br><span class="line">            <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        me = requests.get(url, headers=headers).json()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            token[<span class="string">&quot;account&quot;</span>]=me[<span class="string">&quot;owner&quot;</span>][<span class="string">&quot;user&quot;</span>][<span class="string">&quot;email&quot;</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            token[<span class="string">&quot;account&quot;</span>] = me[<span class="string">&quot;owner&quot;</span>][<span class="string">&quot;user&quot;</span>][<span class="string">&quot;displayName&quot;</span>]</span><br><span class="line">        token[<span class="string">&quot;drive&quot;</span>] = me[<span class="string">&quot;id&quot;</span>]</span><br><span class="line">        json_token = json.dumps(token, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">4</span>)</span><br><span class="line">        path_token = os.path.join(path_oss_store, filename_token)</span><br><span class="line">        bucket.put_object(path_token, json_token)</span><br><span class="line">        bucket.put_object_acl(path_token,oss2.OBJECT_ACL_PRIVATE)</span><br><span class="line">        <span class="keyword">return</span> redirect(final)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        result=&#123;<span class="string">&quot;error&quot;</span>:e.message,<span class="string">&quot;token&quot;</span>:token,<span class="string">&quot;code&quot;</span>:code,<span class="string">&quot;final&quot;</span>:final&#125;</span><br><span class="line">        <span class="keyword">return</span> json.dumps(result)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/list&#x27;</span>, methods = [<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">list</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        drive = token[<span class="string">&quot;drive&quot;</span>]</span><br><span class="line">        access_token = token[<span class="string">&quot;access_token&quot;</span>]</span><br><span class="line">        headers=&#123;</span><br><span class="line">            <span class="string">&quot;Authorization&quot;</span>:<span class="string">&quot;bearer &#123;&#125;&quot;</span>.<span class="built_in">format</span>(access_token),</span><br><span class="line">            <span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;application/json&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> request.method==<span class="string">&quot;POST&quot;</span>:</span><br><span class="line">            data=request.get_data(as_text=<span class="literal">True</span>)</span><br><span class="line">            data = json.loads(data)</span><br><span class="line">            url=data[<span class="string">&quot;next&quot;</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            path=request.values.get(<span class="string">&quot;path&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> path:</span><br><span class="line">                path = <span class="string">&quot;drives/&#123;&#125;/root:/&#123;&#125;:/children&quot;</span>.<span class="built_in">format</span>(drive, path)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                path = <span class="string">&quot;me/drive/root/children&quot;</span></span><br><span class="line">            url = base_url + path</span><br><span class="line">            url = <span class="string">&quot;&#123;&#125;?$top=&#123;&#125;&amp;$select=&#123;&#125;&quot;</span>.<span class="built_in">format</span>(url, items_per_page, select)</span><br><span class="line">        data = requests.get(url, headers=headers).json()</span><br><span class="line">        response=&#123;&#125;</span><br><span class="line">        items=[]</span><br><span class="line">        <span class="built_in">list</span>=data[<span class="string">&quot;value&quot;</span>]</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">            result=&#123;&#125;</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;folder&quot;</span> <span class="keyword">in</span> item:</span><br><span class="line">                result[<span class="string">&quot;type&quot;</span>]=<span class="string">&quot;folder&quot;</span></span><br><span class="line">                result[<span class="string">&quot;childCount&quot;</span>]=item[<span class="string">&quot;folder&quot;</span>][<span class="string">&quot;childCount&quot;</span>]</span><br><span class="line">            <span class="keyword">elif</span> <span class="string">&quot;image&quot;</span> <span class="keyword">in</span> item:</span><br><span class="line">                    result[<span class="string">&quot;type&quot;</span>]=<span class="string">&quot;picture&quot;</span></span><br><span class="line">            <span class="keyword">elif</span> <span class="string">&quot;video&quot;</span> <span class="keyword">in</span> item:</span><br><span class="line">                result[<span class="string">&quot;type&quot;</span>] = <span class="string">&quot;play-square&quot;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result[<span class="string">&quot;type&quot;</span>] = <span class="string">&quot;file&quot;</span></span><br><span class="line">            result[<span class="string">&quot;id&quot;</span>] = item[<span class="string">&quot;id&quot;</span>]</span><br><span class="line">            result[<span class="string">&quot;name&quot;</span>] = item[<span class="string">&quot;name&quot;</span>]</span><br><span class="line">            result[<span class="string">&quot;size&quot;</span>] = item[<span class="string">&quot;size&quot;</span>]</span><br><span class="line">            result[<span class="string">&quot;time&quot;</span>] = item[<span class="string">&quot;lastModifiedDateTime&quot;</span>]</span><br><span class="line">            items.append(result)</span><br><span class="line">        response[<span class="string">&quot;data&quot;</span>]=items</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;@odata.nextLink&quot;</span> <span class="keyword">in</span> data:</span><br><span class="line">            response[<span class="string">&quot;next&quot;</span>]=data[<span class="string">&quot;@odata.nextLink&quot;</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            response[<span class="string">&quot;next&quot;</span>] =<span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        response=&#123;<span class="string">&quot;error&quot;</span>:e.message,<span class="string">&quot;data&quot;</span>:data&#125;</span><br><span class="line">    <span class="keyword">return</span> json.dumps(response)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/download&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span>():</span></span><br><span class="line">    <span class="built_in">id</span> = request.args.get(<span class="string">&quot;id&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">id</span>:</span><br><span class="line">        path=<span class="string">&#x27;me/drive/items/&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>)</span><br><span class="line">        url = base_url + path</span><br><span class="line">        access_token = token[<span class="string">&quot;access_token&quot;</span>]</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&quot;Authorization&quot;</span>: <span class="string">&quot;bearer &#123;&#125;&quot;</span>.<span class="built_in">format</span>(access_token),</span><br><span class="line">            <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        data = requests.get(url, headers=headers).json()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="string">&quot;folder&quot;</span> <span class="keyword">in</span> data:</span><br><span class="line">            url_download=data[<span class="string">&quot;@microsoft.graph.downloadUrl&quot;</span>]</span><br><span class="line">            <span class="keyword">return</span> redirect(url_download)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.before_request</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">before</span>(<span class="params">*args,**kwargs</span>):</span></span><br><span class="line">    <span class="keyword">global</span> token</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        time_now = time.time()</span><br><span class="line">        time_last = token[<span class="string">&quot;time&quot;</span>]</span><br><span class="line">        <span class="keyword">if</span> time_now - time_last &gt;<span class="number">3500</span>:</span><br><span class="line">            refresh_token = token[<span class="string">&quot;refresh_token&quot;</span>]</span><br><span class="line">            scope = token[<span class="string">&quot;scope&quot;</span>]</span><br><span class="line">            url = <span class="string">&quot;https://login.microsoftonline.com/common/oauth2/v2.0/token&quot;</span></span><br><span class="line">            headers = &#123;</span><br><span class="line">                <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">&quot;client_id&quot;</span>: client_id,</span><br><span class="line">                <span class="string">&quot;client_secret&quot;</span>: client_secret,</span><br><span class="line">                <span class="string">&quot;redirect_uri&quot;</span>: redirect_uri_register,</span><br><span class="line">                <span class="string">&quot;refresh_token&quot;</span>: refresh_token,</span><br><span class="line">                <span class="string">&quot;grant_type&quot;</span>: <span class="string">&quot;refresh_token&quot;</span>,</span><br><span class="line">                <span class="string">&quot;scope&quot;</span>: scope,</span><br><span class="line">            &#125;</span><br><span class="line">            data = requests.post(url, data=data, headers=headers).json()</span><br><span class="line">            data[<span class="string">&quot;time&quot;</span>] = time.time()</span><br><span class="line">            data[<span class="string">&quot;account&quot;</span>] = token[<span class="string">&quot;account&quot;</span>]</span><br><span class="line">            data[<span class="string">&quot;drive&quot;</span>] = token[<span class="string">&quot;drive&quot;</span>]</span><br><span class="line">            token = data</span><br><span class="line">            json_token = json.dumps(data, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">4</span>)</span><br><span class="line">            path_token = os.path.join(path_oss_store, filename_token)</span><br><span class="line">            bucket.put_object(path_token, json_token)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span>():</span></span><br><span class="line">    <span class="keyword">global</span> token,oss_available</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        service = oss2.Service(auth, oss_end_point.replace(<span class="string">&quot;http://&quot;</span>, <span class="string">&quot;&quot;</span>), connect_timeout=<span class="number">0.5</span>)</span><br><span class="line">        service.list_buckets()</span><br><span class="line">        oss_available=<span class="literal">True</span></span><br><span class="line">        path_token =<span class="string">&quot;&#123;&#125;/&#123;&#125;&quot;</span>.<span class="built_in">format</span>(path_oss_store,filename_token)</span><br><span class="line">        <span class="keyword">if</span> bucket.object_exists(path_token):</span><br><span class="line">            token = bucket.get_object(path_token)</span><br><span class="line">            token = json.loads(token.read())</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    init()</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p>第11行是你网盘管理员的密码，可以自定义，并且要记牢，以后一直都会用。</p><p>第12行到下面的图片位置找。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200712103506.png"></p><p>然后14行在单引号中填写刚刚获取的AccessKey，15行填写AccessKey的密码</p><p>在16行填写Endpoint，然后17行填写Bucket名称。</p><h2 id="前端配置"><a href="#前端配置" class="headerlink" title="前端配置"></a>前端配置</h2><p>我们在前面已经把所有的后端搭建好了，我们就来搭建前端。</p><blockquote><p>偷懒小提示：可以直接Fork我的仓库，再在<del>Gayhub</del>（打错了不好意思）Github里面修改<code>config.json</code>文件即可。仓库地址：<a href="https://github.com/HenryHe613/Oneindex_Serverless">Github传送门</a></p></blockquote><p><del>先下载必要文件：<a href="https://drive.yelow.ga/#/?path=Public_Source/Blog/dd57">https://drive.yelow.ga/#/?path=Public_Source/Blog/dd57</a></del>前面的地址贼慢，换一个<a href="https://share.yelow.ga/Blog/dd57/">下载地址_传送门</a>这里面的Front.zip。</p><p>解压该文件，得到文件夹下两个文件：</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200712131713.png"></p><p>好，我们不管index.html，我们配置config.json。</p><p>打开config.json，给host赋值为HTTP触发器，如果你忘了，那么请你再看一下这张照片：</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200712103506.png"></p><p>配置完应该长这样，保存一下</p><p><img src="https://s1.ax1x.com/2020/07/12/U3808x.png" alt="U3808x.png"></p><p>然后，我定义了自己的域名（drive.yelow.ga），我就加了一个CNAME，并用Git同步到Github的一个仓库里。</p><p>仓库记得打开Pages，当然，Gitee和Coding也是可以用的。</p><p>然后访问域名，会发现啥都没有。</p><h2 id="连接Onedrive"><a href="#连接Onedrive" class="headerlink" title="连接Onedrive"></a>连接Onedrive</h2><p>在你刚打开的域名后面加上/admin，（例如我的就是<a href="https://drive.yelow.ga/#/admin%EF%BC%8C%E8%BF%99%E4%B8%AA#%E6%98%AF%E5%AE%83%E8%87%AA%E5%8A%A8%E4%BC%9A%E5%8A%A0%E7%9A%84%EF%BC%89">https://drive.yelow.ga/#/admin，这个#是它自动会加的）</a></p><p>就到了管理界面。</p><p><img src="https://s1.ax1x.com/2020/07/12/U38bZQ.png" alt="U38bZQ.png"></p><p>对，就张这挫样。可能是用来迷惑的，右面的按钮设计成了搜索。</p><p>输入你在阿里云里的密码。不不，不是Access的，是你在main.py里面的密码。</p><p>进入了简洁的管理界面。</p><p>如果Bucket没设置好，这里<code>对象储存</code>就会报错。由于我已经登陆了Onedrive，所以第三行就变绿了。</p><p><img src="https://s1.ax1x.com/2020/07/12/U3G8JI.png" alt="U3G8JI.png"></p><p>绑定Onedrive，就在左侧<code>账号管理</code>。</p><p><img src="https://s1.ax1x.com/2020/07/12/U3GsWq.png" alt="U3GsWq.png"></p><p>但这个Oneindex-Serverless和Oneindex还是有很大差别的，Serverless版的只能下载，PHP的还有上传。</p><p>最后，欢迎访问我的网盘hh，里面说不定有好东西哦！！！</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Onedrive </tag>
            
            <tag> 网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Coding部署Hexo</title>
      <link href="//7fe9.html"/>
      <url>//7fe9.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="利用Coding部署Hexo"><a href="#利用Coding部署Hexo" class="headerlink" title="利用Coding部署Hexo"></a>利用Coding部署Hexo</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前看到CYF在博客写了<a href="https://blog.cyfan.top/2020/06/29/Up-Blog-By-Travis-ci/">利用Travis-CI实现在线更新Hexo</a></p><p>想到我也要高中去了/滑稽脸，我也试了一下Travis-CI。但是可能我技术不到家，次次都失败，英文界面也看得我头大。</p><p>后来在Coding里面看见了持续集成，心里一动，说不定这玩意儿还真行。</p><h1 id="上传Hexo源文件到Coding"><a href="#上传Hexo源文件到Coding" class="headerlink" title="上传Hexo源文件到Coding"></a>上传Hexo源文件到Coding</h1><p>参考我之前的文章吧，我都懒得复制了<a href="https://www.yelow.ga/post/58.html">传送门</a>，不过那篇我也没写完/偷懒。</p><p>之后我们来到Coding界面。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200711103522.png"></p><p>可能会没有持续集成，需要到左下角的项目设置里打开。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200711103632.png"></p><p>你们可能会好奇，为什么我不用持续部署。因为我的博客文件太大了，Coding只支持128MB及以下的html文件部署。唉，还是Github好。</p><h1 id="配置构建计划"><a href="#配置构建计划" class="headerlink" title="配置构建计划"></a>配置构建计划</h1><p>在持续集成的子目录中找到构建计划，创建构建计划，并拉到最下面，选择自定义构建过程。</p><p><img src="https://s1.ax1x.com/2020/07/11/UQUPoj.png" alt="UQUPoj.png"></p><p>然后自定义一下红框内的内容。我没有测试过Github等其他的仓库会不会出发Coding的构建，毕竟我用Coding来托管我的Hexo源代码。</p><p><img src="https://s1.ax1x.com/2020/07/11/UQUa0e.png" alt="UQUa0e.png"></p><p>然后我们进入如下界面了。</p><p><img src="https://s1.ax1x.com/2020/07/11/UQUDfI.png" alt="UQUDfI.png"></p><p>为了方便传送 Jenkinsfile 配置，我采用了文本编辑器。</p><p><img src="https://s1.ax1x.com/2020/07/11/UQUHXT.png" alt="UQUHXT.png"></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">  agent any</span><br><span class="line">  stages &#123;</span><br><span class="line">    stage(<span class="string">&#x27;克隆项目&#x27;</span>) &#123;</span><br><span class="line">      steps &#123;</span><br><span class="line">        sh <span class="string">&#x27;git clone https://&#123;user.name&#125;:&#123;token&#125;@e.coding.net/atasgayb/blog/source.git .&#x27;</span></span><br><span class="line">        sh <span class="string">&#x27;ls -a&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    stage(<span class="string">&#x27;安装依赖&#x27;</span>) &#123;</span><br><span class="line">      steps &#123;</span><br><span class="line">        sh <span class="string">&#x27;ls -a&#x27;</span></span><br><span class="line">        sh <span class="string">&#x27;npm install&#x27;</span></span><br><span class="line">        sh <span class="string">&#x27;npm install -g hexo-cli&#x27;</span></span><br><span class="line">        sh <span class="string">&#x27;npm install hexo --save&#x27;</span></span><br><span class="line">        sh <span class="string">&#x27;npm install hexo-deployer-git --save&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    stage(<span class="string">&#x27;构建发布&#x27;</span>) &#123;</span><br><span class="line">      steps &#123;</span><br><span class="line">        sh <span class="string">&#x27;hexo cl&#x27;</span></span><br><span class="line">        sh <span class="string">&#x27;hexo g -d&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在代码块的第6行，{user.name}和{token}对应Coding中的token用户名和token。</p><p>token需要的权限是读取私有仓库（Coding的仓库默认都是私有的）。</p><p>这个Jenkinsfile配置不是我自己写的，当时源代码是没有<code>sh &#39;npm install hexo-deployer-git --save&#39;</code>这么一行，我说我怎么老是构建失败，hexo d根本不能使用！！！</p><p>然后我们把Hexo源文件文件夹下面的_config.yml文件里的deploy地址改一下。</p><p>改成这样：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://a3xz7tew834hgfd374m763453a4gr7fd32@github.com/HenryHe613/blog.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>@前面的一串字符串是token，需要在Github里生成，并且需要仓库的读写权限。</p><p>/滑稽，别想了，这个token是我乱打的，我可不会傻到把token送给你们hh</p><p>然后试一下把本地的文件push到Coding上，看看会不会构建成功。</p><p>如果查看完整日志的时候出现这个：<code>npm ERR! Unexpected end of JSON input while parsing near</code>，可能你就部署失败了。需要在 Jenkinsfile 配置 中添加<code>npm cache clean --force</code>这玩意儿，清理npm的错误。</p><h1 id="优化构建速度"><a href="#优化构建速度" class="headerlink" title="优化构建速度"></a>优化构建速度</h1><p>（2020.8.1 added）</p><p>每次都这么构建，着实有点费时间。前几天看到了Coding的持续部署中有<code>缓存</code>可以设置，便尝试了一下，能很大提高效率。</p><p><img src="https://pic.baixiongz.com/2020/08/01/e2b6025345335.jpg"></p><p><img src="https://pic.baixiongz.com/2020/08/01/dbf5b19de3954.png"></p><p>在<code>持续集成</code>的设置中找到<code>变量与缓存</code>，然后像我一样设置</p><p><img src="https://pic.baixiongz.com/2020/08/01/141de9ce6e05d.png"></p><p>之后<code>立即构建</code>一下，把你的文件缓存起来。</p><p>接下去我们要改一下Jenkinsfile配置。不然由于缓存，你Jenkinsfile配置中的git clone将无法运行，导致报错。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">  agent any</span><br><span class="line">  stages &#123;</span><br><span class="line">    stage(<span class="string">&#x27;克隆项目&#x27;</span>) &#123;</span><br><span class="line">      steps &#123;</span><br><span class="line">        sh <span class="string">&#x27;git pull https://&#123;user.name&#125;:&#123;token&#125;@e.coding.net/atasgayb/blog/source.git&#x27;</span></span><br><span class="line">        sh <span class="string">&#x27;ls -a&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    stage(<span class="string">&#x27;安装依赖&#x27;</span>) &#123;</span><br><span class="line">      steps &#123;</span><br><span class="line">        sh <span class="string">&#x27;ls -a&#x27;</span></span><br><span class="line">        sh <span class="string">&#x27;npm install&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    stage(<span class="string">&#x27;构建发布&#x27;</span>) &#123;</span><br><span class="line">      steps &#123;</span><br><span class="line">        sh <span class="string">&#x27;hexo g -d&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置成以上的代码，就OK了。你可以享受缓存的快感了。虽然用了缓存之快了十几秒。</p><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Coding </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matery主题添加Artitalk</title>
      <link href="//879a.html"/>
      <url>//879a.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Matery主题添加Artitalk"><a href="#Matery主题添加Artitalk" class="headerlink" title="Matery主题添加Artitalk"></a>Matery主题添加Artitalk</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>先上链接，这是我的说说界面：<a href="https://www.yelow.ga/shuoshuo/">闲言碎语</a></p><p>有时候啊，hexo想发说说/微语总是有点麻烦，这时候Artitalk出现了。</p><h1 id="安装Artitalk"><a href="#安装Artitalk" class="headerlink" title="安装Artitalk"></a>安装Artitalk</h1><p>Matery主题没有自带Artitalk集成，所以要自己安装。</p><p>先生成一个说说的页面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;shuoshuo&quot;</span></span><br></pre></td></tr></table></figure><p>然后在<code>blog/source/</code>下面出现了<code>shuoshuo</code>这个文件夹，里面有一个<code>index.md</code>文件。</p><p>打开这个文件，现在里面是这样的：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: shuoshuo</span><br><span class="line">date: 2020-06-05 11:15:37</span><br><span class="line">type: shuoshuo</span><br><span class="line">\-\-\-</span><br></pre></td></tr></table></figure><p>把<code>Front-Matery</code>改成这样：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 闲言</span><br><span class="line">date: 2020-06-05 11:15:37</span><br><span class="line">type: &quot;shuoshuo&quot;</span><br><span class="line">\-\-\-</span><br></pre></td></tr></table></figure><p>当然<code>title</code>你可以自定义哦</p><p>之前真的很头疼，<code>Artitalk</code>和<code>Valine</code>不能同时使用，因为两者的后台都是基于<code>LeanClou</code>d的，所以不能一起使用。我也曾因此放弃过搭建说说。</p><p>我也试过在<code>Front-Matter</code>里添加<code>comments: &#39;false&#39;</code>，但是这个方法仅适用于<code>Butterfly</code>主题，<code>Matery</code>主题没有这个配置。</p><p>但是前几天看到<code>Artitalk</code>官方的文档说解决了这个问题，我就再次尝试了。</p><p>和<code>Valine</code>一样，打开<code>LeanCloud</code>之后创建应用，之后我借用一下<code>Artitalk.js</code>的官方文档。</p><ol><li><p>绑定完成之后点击创建应用，应用名称随意，接着在结构化数据中创建<code>class</code>，命名为<code>shuoshuo</code>。</p></li><li><p>在你新建的应用中找到结构化数据下的用户。点击<code>添加用户</code>，输入想用的用户名及密码。</p></li><li><p>回到结构化数据中，点击<code>class</code>下的<code>shuoshuo</code>。找到<code>权限</code>，在<code>Class</code>访问权限中将<code>add_fields</code>以及<code>create</code>权限设置为指定用户，输入你刚才输入的用户名会自动匹配。为了安全起见，将<code>delete</code>和<code>update</code>也设置为跟它们一样的权限。</p></li><li><p>点击<code>class</code>下的<code>_User</code>添加列，列名称为<code>img</code>，默认值填上你这个账号想要用的头像url，这一项不进行配置，说说头像会显示为默认头像——Artitalk的logo。</p></li><li><p>在最菜单栏中找到<code>设置</code>-&gt;<code>应用keys</code>，记下来<code>AppID</code>和<code>AppKey</code>，一会会用。</p></li><li><p>最后将<code>_User</code>中的权限全部调为指定用户，或者数据创建者，为了保证不被篡改用户数据已达到强制发布说说。</p></li><li><p>因为<code>leancloud</code>功能的限制。若想同时使用<code>valine</code>和<code>artitalk</code>，请在<code>class</code>中添加名为<code>Comment</code>的<code>class</code>。不推荐在存储<code>valine</code>的应用中新建名为<code>shuoshuo</code>的<code>class</code>，可能会出现神奇的bug。</p></li></ol><p>之后在<code>shuoshuo</code>的<code>index.md</code>里添加如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://libs.baidu.com/jquery/2.0.0/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var appID=&quot;&quot;; <span class="comment">&lt;!--这里填写刚刚获取的appID--&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    var appKEY=&quot;&quot;; <span class="comment">&lt;!--这里填写刚刚获取的appKEY--&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;artitalk_main&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/artitalk&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果出现特殊情况，我这里不一一解释/*其实我也不懂emmmm*/。最好是查看<code>Artitalk.js</code>的官方文档==&gt;<a href="https://artitalk.js.org/faq.html#%F0%9F%94%A8-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">传送门</a></p><p>还有哈，有一些自定义功能可以到<code>Artitalk.js</code>的官方文档里查看，在这里==&gt;<a href="https://artitalk.js.org/settings.html#%E5%BF%85%E5%A1%AB">传送门</a></p><p>但是<code>Artitalk</code>仍然不能使用。</p><h1 id="更新Valine"><a href="#更新Valine" class="headerlink" title="更新Valine"></a>更新Valine</h1><p>Artitalk的大佬说了，<code>Valine</code>里面的<code>av-min.js</code>干扰了<code>Artitalk</code>。而v1.4.x版的<code>Valine</code>可以不需要<code>av-min.js</code>。于是我得把<code>Valine</code>升级一下。</p><p>由于<code>Valine</code>是集成在<code>Matery</code>主题里的，所以升级可折腾死我了。</p><p>到Github上找到<code>Valine</code>：<a href="https://github.com/xCss/Valine">传送门</a></p><p>复制https的Git地址，到<a href="http://g.widyun.com/">GitHub代下载服务</a>快速下载//真的没有打广告</p><p>然后解压，在<code>dist</code>文件夹里找到<code>Valine.min.js</code>，复制并替换blog\themes\matery\source\libs\valine里面的<code>Valine.min.js</code></p><p>并删除<code>av-min.js</code>，然后<code>hexo cl&amp;&amp;hexo g&amp;&amp;hexo s</code>。查看的地址是 [https://{you blog’s site}/shuoshuo](https://{you blog’s site}/shuoshuo)</p><p>以下是我的效果图，但是我觉得这个样子很难看，这些画红框框的地方我不喜欢。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200710130542.png"></p><p>更不能忍受的是，最下面的文章跳转吧我的appID和appKey给泄露了。不但不美观，还有点危险。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200710131031.png"></p><h1 id="优化说说界面"><a href="#优化说说界面" class="headerlink" title="优化说说界面"></a>优化说说界面</h1><p>我再想了一下，由于我没有给<code>shuoshuo</code>定义页面，所以它就按照<code>post</code>的样式来了。</p><p>在<code>Front-Matter</code>里加上这个一行：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">layout: &quot;shuoshuo&quot;</span><br></pre></td></tr></table></figure><p>然后在主题文件夹下找到<code>\matery\layout\</code>，在里面新建一个<code>shuoshuo.ejs</code>文件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="comment">/* don&#x27;t remove. */</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.about-cover</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">75vh</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- partial(&#x27;_partial/bg-cover&#x27;) %&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">main</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;aboutme&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container about-container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-content&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-content article-card-content&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title center-align&quot;</span> <span class="attr">data-aos</span>=<span class="string">&quot;zoom-in-up&quot;</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-comment&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>&lt;%- __(&#x27;闲言碎语&#x27;) %&gt;</span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;articleContent&quot;</span> <span class="attr">data-aos</span>=<span class="string">&quot;fade-up&quot;</span>&gt;</span></span><br><span class="line">                     &lt;%- page.content %&gt;</span><br><span class="line">                 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            &lt;% if (theme.gitalk &amp;&amp; theme.gitalk.enable) &#123; %&gt;</span><br><span class="line">            &lt;%- partial(&#x27;_partial/gitalk&#x27;) %&gt;</span><br><span class="line">            &lt;% &#125; %&gt;</span><br><span class="line"></span><br><span class="line">            &lt;% if (theme.gitment.enable) &#123; %&gt;</span><br><span class="line">            &lt;%- partial(&#x27;_partial/gitment&#x27;) %&gt;</span><br><span class="line">            &lt;% &#125; %&gt;</span><br><span class="line"></span><br><span class="line">            &lt;% if (theme.disqus.enable) &#123; %&gt;</span><br><span class="line">            &lt;%- partial(&#x27;_partial/disqus&#x27;) %&gt;</span><br><span class="line">            &lt;% &#125; %&gt;</span><br><span class="line"></span><br><span class="line">            &lt;% if (theme.livere &amp;&amp; theme.livere.enable) &#123; %&gt;</span><br><span class="line">            &lt;%- partial(&#x27;_partial/livere&#x27;) %&gt;</span><br><span class="line">            &lt;% &#125; %&gt;</span><br><span class="line"></span><br><span class="line">            &lt;% if (theme.valine &amp;&amp; theme.valine.enable) &#123; %&gt;</span><br><span class="line">            &lt;%- partial(&#x27;_partial/valine&#x27;) %&gt;</span><br><span class="line">            &lt;% &#125; %&gt;</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这个代码是我从<code>about.ejs</code>里面复制来的，经过删减和添加，可能效果还是不怎么样，但是毕竟算是我捣鼓出来的emmm。有不合理之处请赐教。</p></blockquote><p>最后可以<code>hexo cl&amp;&amp;hexo g&amp;&amp;hexo s</code>看看，并试着<code>hexo d</code>了。</p><h1 id="且慢！！！"><a href="#且慢！！！" class="headerlink" title="且慢！！！"></a>且慢！！！</h1><p>我忘了一个很重要的事，要在主题文件的_config.yml里添加这么一行：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">说说:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/shuoshuo</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-comment</span></span><br></pre></td></tr></table></figure><p>这样才能在顶部菜单栏里看到这个页面。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
            <tag> Artitalk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取微软应用程序的API</title>
      <link href="//u7r6.html"/>
      <url>//u7r6.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="获取微软应用程序的API"><a href="#获取微软应用程序的API" class="headerlink" title="获取微软应用程序的API"></a>获取微软应用程序的API</h1><p>有时候微软应用程序API获取的时候会抽，半天没反应。</p><p>这时需要手动到Azure获取应用机密和应用ID。</p><p>打开<a href="https://portal.azure.com/">https://portal.azure.com/</a>，登录你的微软账号。</p><p>登录完成后，可以看到如下界面，选择管理 <code>Azure Active Directory</code> 。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200710195336.png"></p><p>选择左边的<code>应用注册</code>，并<code>注册新应用</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200710195408.png"></p><p>写好应用名称，方便以后管理应用。并填写URI，以便验证身份后进行重定向。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200710195430.png"></p><p>此时，应用程序ID就出现了。就在下图的红框里</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200710195505.png"></p><p>现在我们来找<code>应用机密</code>。</p><p>打开左边的<code>证书与密码</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200710195534.png"></p><p>新建客户端密码</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200710195557.png"></p><p>添加一个说明，便于管理机密，然后酌情选择失效时间。我这里选择了<code>从不</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200710195617.png"></p><p>然后<code>应用机密</code>就出现了，右面有个小按钮，可以复制。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200710195642.png"></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微软 </tag>
            
            <tag> API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换设备继续Hexo</title>
      <link href="//58.html"/>
      <url>//58.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="一直想写这么一篇博文，但是没有机会写。这次换了设备，于是写了这篇。"><a href="#一直想写这么一篇博文，但是没有机会写。这次换了设备，于是写了这篇。" class="headerlink" title="一直想写这么一篇博文，但是没有机会写。这次换了设备，于是写了这篇。"></a>一直想写这么一篇博文，但是没有机会写。这次换了设备，于是写了这篇。</h3><h1 id="push到代码托管平台"><a href="#push到代码托管平台" class="headerlink" title="push到代码托管平台"></a>push到代码托管平台</h1><blockquote><ul><li>注意* 我这里源文件托管选择了Coding，网站还在Github上。毕竟国内速度好一点。</li></ul><p>还有，这篇文章是写给像我一样的Git小白的。如果是大佬就不用浪费宝贵时间了。如果有什么不对支持，还请提出让我改正。</p></blockquote><h2 id="注册Coding账号"><a href="#注册Coding账号" class="headerlink" title="注册Coding账号"></a>注册Coding账号</h2><p>现在Coding改版了，加了个什么<del>辣鸡</del>团队的东西，有点不舒服。</p><h2 id="push源文件"><a href="#push源文件" class="headerlink" title="push源文件"></a>push源文件</h2><p>先生成ssh文件，以便和git仓库进行同步。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱地址&quot;</span></span><br></pre></td></tr></table></figure><p>找到个人文件夹下面的<code>.ssh</code>目录，打开，复制里面的pub公钥。</p><p>Coding主界面右上角个人设置，打开<code>SSH公钥</code>，把复制的pub公钥加进去。</p><p>打开你的Hexo根目录，并右键<code>Git Bash Here</code>，测试你的SSH配置对不对，能不能连接Coding。代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@git.coding.net</span><br></pre></td></tr></table></figure><blockquote><p>2020/7/8 23:06 补充<br>提示：现在Coding把ssh地址改了，现在正确的是<code>git@e.coding.net</code>。现在我总是连不上，看了官方的文档就傻眼了。而且新的反馈文字也不一样了。见下图：<br><img src="https://s1.ax1x.com/2020/07/26/aC2kAe.png"></p></blockquote><p>如果连接github地话，使用这个：<a href="mailto:&#103;&#105;&#x74;&#x40;&#x67;&#x69;&#116;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#109;">&#103;&#105;&#x74;&#x40;&#x67;&#x69;&#116;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#109;</a>。</p><p>出现Hi XXX的情况，配置就对了。fetal的话，就再配置一下哈。</p><hr><p>2020/7/8 23:06 补充</p><p>我遇到了特殊情况，如下图：</p><p><img src="https://s1.ax1x.com/2020/07/26/aC23NQ.png"></p><p>Google之后发现<code>.ssh</code>这个文件夹里少了<code>known_hosts</code>这个文件。这时直接按提示输入<code>yes</code>就好了。</p><hr><p>在Hexo根目录弄一个本地Git仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>然后目录下面会多出一个隐藏的.git文件夹，这就是仓库，最好别乱动它。</p><p>然后把Hexo根目录加入到本地仓库中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><blockquote><p>注意！！！ <code>add</code>后面有一个<code>space</code>和一个点！</p></blockquote><p>这条命令就是把目录下所有的文件（不包括仓库自己哦）添加到仓库里。注意add后面有一空格还有一个点。</p><p>然后注上commit，文件到达暂存区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;这里想些啥写啥&quot;</span></span><br></pre></td></tr></table></figure><p>之后我们连接Coding的仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote origin git@git.coding.net/***</span><br></pre></td></tr></table></figure><p>注意一下哈，这里的<code>origin</code>是你在<code>GitBash</code>里对这个远程仓库的称呼，可以自己改成喜欢的。如果你已经有<code>origin</code>的仓库了，那么会报错，<code>fetal</code>警告！！这时换一个名字就好了。后面的<code>git@git.coding.net/***</code>就是你仓库的地址，最好ssh的。</p><p>最后，可以push了；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><blockquote><p>注释：<code>origin</code>就是之前远程仓库的名字。<code>master</code>是远程仓库的分支，如果要其他分支的话，请先创建。</p></blockquote><p>不出意外的话，Coding上已经有本地的文件了。</p><p>不过同步速度还是有点慢。</p><h1 id="排除部分文件的同步"><a href="#排除部分文件的同步" class="headerlink" title="排除部分文件的同步"></a>排除部分文件的同步</h1><p>这时就要用到<code>.gitignore</code>文件了。他能够排除个别文件夹保存到仓库。</p><p>Bash里，输入一下的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch .gitignore</span><br></pre></td></tr></table></figure><p>之后检查一下根目录，里面会出现<code>.gitignore</code>文件，里面会有一些拒绝提交的文件名称。比如我的里面是这样的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">package-lock.json</span><br></pre></td></tr></table></figure><p>然后，删除本地仓库里的文件，再add commit push，一些临时文件就没了。速度也快了。</p><p><del>今天有点晚了，明天再更新。</del></p><p>我又回来了！</p><p><code>.gitignore</code>文件的书写教程我过段时间再写。我为了折腾<code>hexo-lazyload-image</code>和<code>hexo-prism-plugin</code>这两个插件，我先是百度，但国内的教程质量，你们都懂。CSDN的文章纯属乱扯。然后我去QQ群里问大佬，但是没人理我/我枯了，看来我人品不好。接下来我自己科学上网去Git官网翻资料，我才自己解决。</p><h1 id="在新电脑继续写Hexo"><a href="#在新电脑继续写Hexo" class="headerlink" title="在新电脑继续写Hexo"></a>在新电脑继续写Hexo</h1><p>安装<code>Git</code>和<code>Node.js</code>这俩我不多说，会写博客就会安装。</p><p>然后新建一个文件夹，如果你在<code>Coding</code>上的博客源文件开源了，那你可以直接<code>Clone</code>。</p><p>在下图找到你的<code>Git</code>仓库<code>Https</code>地址，然后我们<code>Clone</code>。</p><p><img src="https://pic.baixiongz.com/2020/08/12/35f9862168f9d.png"></p><p>在<code>Git Bash</code>中输入以下代码。注意把链接改成自己的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://e.coding.net/atasgayb/blog/blog.git</span><br></pre></td></tr></table></figure><p>然后我们关掉<code>Git Bash</code>，打开Clone下来的文件夹。再重新打开<code>Git Bash</code>。</p><p>我们先安装<code>hexo</code>：</p><p>依次运行以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure><p>然后我们安装<code>Hexo</code>同步<code>Git</code>仓库的插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>最后安装所有依赖插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>如果你安装的插件很多的话，最后一步可能会很慢。</p><p>接下来就和原来的环境一模一样了，你可以安稳地写博客了。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拒绝使用Gitalk和Gitment</title>
      <link href="//cd88.html"/>
      <url>//cd88.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前我用的是Gitalk，毕竟方便啊，Matery主题自带，只需要配置OAuth就好了。</p><p>但是在V2XE里看见有人不推荐使用，我看了一下，也有点心有余悸。</p><p>同时Gitalk总是会抽，老是发不了评论。</p><h1 id="找Gitalk的OAuth"><a href="#找Gitalk的OAuth" class="headerlink" title="找Gitalk的OAuth"></a>找Gitalk的OAuth</h1><blockquote><p>以<a href="https://blog.xiaolegun.cn/">xiaoleGun</a>的博客做例子，轻喷！！！</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200606205635.png"></p><p>我找到了一个Gitalk，右键<code>另存为</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200606205747.png"></p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200606210021.png"></p><p>html文件用VSCode打开，</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/img/20200606210218.png"></p><p>搜索<code>clientID</code>或者<code>clientSecret</code>，可以明显发现是明文保存。</p><p><code>clientID</code>和<code>clientSecret</code>的攻击方法我没研究过，但是根据Github和Gitalk官方的文档，这两个泄露是可以删除ID所有者的所有公有仓库的。可见危害之大。</p><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>我写这篇博文是希望Gitalk和Gitment的作者可以引起重视，虽然还没有这种事件发生，但是这是个隐患。</p><p>希望看到本文的各位不要利用这个漏洞攻击，对攻击事件本人概不负责，本文提供学术交流，没有任何攻击倾向。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo链接优化</title>
      <link href="//876.html"/>
      <url>//876.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>按照Matery官方的文档，我在安装Matery主题时，也安装了中文链接转拼音的插件，即<code>hexo-permalink-pinyin</code>插件。</p><p>但是事后我发现，这个链接实在太长了，分享的时候着实很不方便。</p><p>所以我找到了这个插件：<code>hexo-abbrlink</code></p><h1 id="卸载hexo-permalink-pinyin插件"><a href="#卸载hexo-permalink-pinyin插件" class="headerlink" title="卸载hexo-permalink-pinyin插件"></a>卸载<code>hexo-permalink-pinyin</code>插件</h1><p>安装<code>hexo-abbrlink</code>之前必须卸载之前的插件，以免冲突。</p><p>如果你没安装过这个插件，可以直接跳过这一步。</p><p>右键Hexo根目录，点击<code>Git Bash Here</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-permalink-pinyin</span><br></pre></td></tr></table></figure><p>卸载之后，到Hexo根目录下的<code>_config.yml</code>中找到以下的配置并全部删除。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink_pinyin:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">separator:</span> <span class="string">&#x27;-&#x27;</span> <span class="comment"># default: &#x27;-&#x27;</span></span><br></pre></td></tr></table></figure><p>这样第一步就完成了。</p><h1 id="安装hexo-abbrlink插件"><a href="#安装hexo-abbrlink插件" class="headerlink" title="安装hexo-abbrlink插件"></a>安装<code>hexo-abbrlink</code>插件</h1><p>右键Hexo根目录，点击<code>Git Bash Here</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>安装好后，在Hexo根目录下的<code>_config.yml</code>中粘贴以下的配置。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line"><span class="attr">alg:</span> <span class="string">crc16</span></span><br><span class="line"><span class="attr">rep:</span> <span class="string">hex</span></span><br></pre></td></tr></table></figure><p>然后再在大约18行处找到<code>permalink</code>，参数改成<code>:abbrlink.html</code>或者<code>posts/:abbrlink.html</code></p><p>具体的样子可以自己hexo g &amp;&amp; hexo s预览一下看看。</p><p>我再解释一下<code>alg</code>和<code>rep</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```rep```是进制，共有两种进制。一种是```hex```和```dec```。</span><br><span class="line"></span><br><span class="line">```hex```是十六进制，```dec```是十进制。</span><br><span class="line"></span><br><span class="line">下面是官方给出的例子，大家也可以自己尝试。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>crc16 &amp; hex<br><a href="https://post.zz173.com/posts/66c8.html">https://post.zz173.com/posts/66c8.html</a></p><p>crc16 &amp; dec<br><a href="https://post.zz173.com/posts/65535.html">https://post.zz173.com/posts/65535.html</a></p><p>crc32 &amp; hex<br><a href="https://post.zz173.com/posts/8ddf18fb.html">https://post.zz173.com/posts/8ddf18fb.html</a></p><p>crc32 &amp; dec<br><a href="https://post.zz173.com/posts/1690090958.html">https://post.zz173.com/posts/1690090958.html</a></p><p>```</p><h1 id="安装之后"><a href="#安装之后" class="headerlink" title="安装之后"></a>安装之后</h1><p>装完之后，hexo g之后，再打开.md文件，你会发现<code>Front-matter</code>里面多了<code>abbrlink</code>的内容。这是abbrlink生成的，防止链接变动。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matery添加在线聊天功能</title>
      <link href="//5741.html"/>
      <url>//5741.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Matery主题默认支持两种在线聊天工具。一是DaoVoice，二是Tidio。</p><p><img src="https://s1.ax1x.com/2020/06/05/tD38JS.png" alt="tD38JS.png"></p><p>上面一点黑灰色的是Tidio，下面一点蓝色的是DaoVoice。（Tidio按钮的颜色有5种可以选，DaoVoice不清楚，没有深入研究过）</p><p>我个人比较喜欢Tidio，毕竟长得好看哈哈。同时也不会挡住红色的主页按钮。</p><p>两个同时开启也可以，但肯定是有点奇奇怪怪的。</p><h1 id="安装TiDio-gt-去Tidio官网获取public-key"><a href="#安装TiDio-gt-去Tidio官网获取public-key" class="headerlink" title="安装TiDio=&gt;去Tidio官网获取public_key"></a>安装TiDio=&gt;去Tidio官网获取public_key</h1><p><a href="https://www.tidio.com/">官网传送门</a></p><p>注册不多讲，不需要实名认证。有点慢是肯定的，毕竟用了CloudFlare的CDN。</p><p><img src="https://s1.ax1x.com/2020/06/05/tD8iOs.png" alt="tD8iOs.png"></p><p>我们只需要Public Key，Private Key需要保管好，不能泄露。</p><h1 id="安装Tidio-gt-在-config-yml中启用Tidio"><a href="#安装Tidio-gt-在-config-yml中启用Tidio" class="headerlink" title="安装Tidio=&gt;在_config.yml中启用Tidio"></a>安装Tidio=&gt;在_config.yml中启用Tidio</h1><p>打开主题文件夹的<code>_config.yml</code>，在大约468行找到Tidio。</p><p><img src="https://s1.ax1x.com/2020/06/05/tD8a1e.png" alt="tD8a1e.png"></p><p>把<code>enable</code>改为<code>true</code>，然后再<code>public_key</code>后填上从Tidio官网获取的Public Key。</p><blockquote><p>注意</p><p><code>public_key:</code>后面必须有一个空格，不然Hexo会报错。</p></blockquote><p>之后，hexo cl&amp;&amp;hexo g -d看看效果，还行吧？</p><h1 id="安装DaoVoice-gt-去Tidio官网获取appid"><a href="#安装DaoVoice-gt-去Tidio官网获取appid" class="headerlink" title="安装DaoVoice=&gt;去Tidio官网获取appid"></a>安装DaoVoice=&gt;去Tidio官网获取appid</h1><p><a href="http://www.daovoice.io/">官网传送门</a></p><p>DaoVoice有点毛病，Github不能登录。微信我没尝试过，我就用了邮箱注册。而且这个邀请码在这里吓唬人，不填其实也不要紧的。</p><p><img src="https://s1.ax1x.com/2020/06/05/tDJmM4.png" alt="tDJmM4.png"></p><p>保管好API token，下面要用。</p><h1 id="安装DaoVoice-gt-在-config-yml中启用DaoVoice"><a href="#安装DaoVoice-gt-在-config-yml中启用DaoVoice" class="headerlink" title="安装DaoVoice=&gt;在_config.yml中启用DaoVoice"></a>安装DaoVoice=&gt;在_config.yml中启用DaoVoice</h1><p>打开主题文件夹的<code>_config.yml</code>，在大约468行找到Tidio。</p><p><img src="https://s1.ax1x.com/2020/06/05/tDJ8JK.png" alt="tDJ8JK.png"></p><p>把<code>enable</code>改为<code>true</code>，然后再<code>app_id</code>后填上从DaoVoice官网获取的API token。</p><blockquote><p>注意</p><p><code>app_id:</code>后面必须有一个空格，不然Hexo会报错。</p></blockquote><p>之后，hexo cl&amp;&amp;hexo g -d看看效果。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
            <tag> Tidio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Valine配置及安装</title>
      <link href="//942c.html"/>
      <url>//942c.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="注册Valine并获取Appid和Appkey"><a href="#注册Valine并获取Appid和Appkey" class="headerlink" title="注册Valine并获取Appid和Appkey"></a>注册Valine并获取Appid和Appkey</h1><p>Valine注册很奇怪，不是去官网注册，而是去LeanCloud注册。</p><blockquote><p>[!TIP]</p><p>注意，免费版的Valine每天强制休眠6小时，也就是说，一天中有6小时无法评论。</p></blockquote><p>Valine有两个版本，一个是国际版，还有一个是国内版。<br>国际版不需要实名认证，国内版需要实名认证。</p><p>我选择国际版hh</p><p>链接： <a href="https://console.leancloud.app/">国际版</a> <a href="https://www.leancloud.cn/">国内版</a></p><p>注册不用我多说。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/20200604174953.png"></p><p>点击<code>创建应用</code>,选择<code>开发版</code>，名字任意。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/20200604180405.png"></p><p>进入项目，选择 设置=&gt;应用Keys=&gt;Credentials</p><p>你可以看见AppID和AppKey。</p><h1 id="Matery主题开启并配置Valine"><a href="#Matery主题开启并配置Valine" class="headerlink" title="Matery主题开启并配置Valine"></a>Matery主题开启并配置Valine</h1><p>打开主题文件的<code>_config.yml</code>，找到Valine，大概在303行左右。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The configuration of the Valine comment module is not activated by default.</span></span><br><span class="line"><span class="comment"># To use it, activate the configuration item and set appId and appKey.</span></span><br><span class="line"><span class="comment"># Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appId:</span> </span><br><span class="line">  <span class="attr">appKey:</span> </span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">&#x27;mm&#x27;</span> <span class="comment"># Gravatar style : mm/identicon/monsterid/wavatar/retro/hide</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">&#x27;来不及解释了，快上车~~~&#x27;</span> <span class="comment"># Comment Box placeholder</span></span><br><span class="line">  <span class="attr">background:</span> <span class="string">/medias/comment_bg.png</span></span><br></pre></td></tr></table></figure><p>把<code>enalbe</code>改成true，appId和appKey改成刚刚从leancloud获取的，</p><p>hexo cl&amp;&amp;hexo g&amp;&amp;hexo d看一下，应该就有Valine的评论区了。</p><blockquote><p>[!WARNING]</p><blockquote><p>yaml语法规定，:后面必须要有一个<code>Space</code>！！！不然会出错</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> LeanCloud </tag>
            
            <tag> Valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode更改中文和更改字体</title>
      <link href="//b77d.html"/>
      <url>//b77d.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="VSCode更改中文"><a href="#VSCode更改中文" class="headerlink" title="VSCode更改中文"></a>VSCode更改中文</h1><p>前提是你得安装了VSCode。下载地址：<a href="https://code.visualstudio.com/">传送门</a></p><p>最好是下载<code>Stable</code>版本的，<code>Insiders</code>版的可能会不稳定</p><p>安装好之后应该是英文的。网上的方法可能有点不适用，我介绍一下我的方法。</p><p>下载Chinese插件。<a href="https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-zh-hans">传送门</a></p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/20200604181411.png"></p><p>在右侧点击<code>Download Extension</code>，下载VSIX扩展文件（类似Chromium的CRX）。</p><p>在VSCode插件栏中，右上角···，选择<code>从VSIX安装</code>，选择刚刚下载的插件。</p><p>重启一下VSCode，应该就变中文了。</p><h1 id="VSCode安装JetBrainsMono-Bold字体。"><a href="#VSCode安装JetBrainsMono-Bold字体。" class="headerlink" title="VSCode安装JetBrainsMono-Bold字体。"></a>VSCode安装JetBrainsMono-Bold字体。</h1><p>我最喜欢JetBrainsMono-Bold的字体了。<a href="https://share.yelow.ga/Font/JetBrainsMono-1.0.3.zip">下载地址_传送门</a></p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/20200604181846.png"></p><p>VSCode中打开设置=&gt;文本编辑器=&gt;字体=&gt;Font Family，</p><p>改为<code>&#39;JetBrains Mono&#39;</code>.</p><p>前提是你已经安装了JetBrainsMono-Bold字体。</p><p>如果要使用其他字体，请先安装，再到控制面板里找到字体文件夹，确定字体在文件夹中的名字，再复制到VSCode。不然VSCode认不出来。我就栽在坑里爬了许久。</p><p>这是我的配置：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;editor.fontLigatures&quot;</span>: <span class="literal">true</span>,<span class="comment">//这个控制是否启用字体连字，true启用，false不启用，JetBrains的连字很好看，我就true了</span></span><br><span class="line">    <span class="attr">&quot;editor.fontSize&quot;</span>: <span class="number">20</span>,<span class="comment">//设置字体大小</span></span><br><span class="line">    <span class="attr">&quot;editor.fontWeight&quot;</span>: <span class="string">&quot;normal&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;editor.fontFamily&quot;</span>: <span class="string">&quot;JetBrains Mono&quot;</span>, </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Loading</title>
      <link href="//f59b.html"/>
      <url>//f59b.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在Hexo根目录下新建scripts文件夹，里面再新建loading-pages.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* global hexo */</span></span><br><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">htmlContent</span>) </span>&#123;</span><br><span class="line">     <span class="keyword">const</span> injectHead =</span><br><span class="line"> <span class="string">`&lt;style type=&quot;text/css&quot; lang=&quot;css&quot;&gt;</span></span><br><span class="line"><span class="string">    #loading-container&#123;</span></span><br><span class="line"><span class="string">        position: fixed;</span></span><br><span class="line"><span class="string">        top: 0;</span></span><br><span class="line"><span class="string">        left: 0;</span></span><br><span class="line"><span class="string">        min-height: 100vh;</span></span><br><span class="line"><span class="string">        width: 100vw;</span></span><br><span class="line"><span class="string">        z-index: 9999;</span></span><br><span class="line"><span class="string">        display: flex;</span></span><br><span class="line"><span class="string">        flex-direction: column;</span></span><br><span class="line"><span class="string">        justify-content: center;</span></span><br><span class="line"><span class="string">        align-items: center;</span></span><br><span class="line"><span class="string">        background: #FFF;</span></span><br><span class="line"><span class="string">        text-align: center;</span></span><br><span class="line"><span class="string">        /* loader页面消失采用渐隐的方式*/</span></span><br><span class="line"><span class="string">        -webkit-transition: opacity 1s ease;</span></span><br><span class="line"><span class="string">        -moz-transition: opacity 1s ease;</span></span><br><span class="line"><span class="string">        -o-transition: opacity 1s ease;</span></span><br><span class="line"><span class="string">        transition: opacity 1s ease;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .loading-image&#123;</span></span><br><span class="line"><span class="string">        width: 120px;</span></span><br><span class="line"><span class="string">        height: 50px;</span></span><br><span class="line"><span class="string">        transform: translate(-50%);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(2) &#123;</span></span><br><span class="line"><span class="string">        -webkit-animation: pacman-balls 1s linear 0s infinite;</span></span><br><span class="line"><span class="string">        animation: pacman-balls 1s linear 0s infinite</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(3) &#123;</span></span><br><span class="line"><span class="string">        -webkit-animation: pacman-balls 1s linear .33s infinite;</span></span><br><span class="line"><span class="string">        animation: pacman-balls 1s linear .33s infinite</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(4) &#123;</span></span><br><span class="line"><span class="string">        -webkit-animation: pacman-balls 1s linear .66s infinite;</span></span><br><span class="line"><span class="string">        animation: pacman-balls 1s linear .66s infinite</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(5) &#123;</span></span><br><span class="line"><span class="string">        -webkit-animation: pacman-balls 1s linear .99s infinite;</span></span><br><span class="line"><span class="string">        animation: pacman-balls 1s linear .99s infinite</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">   .loading-image div:first-of-type &#123;</span></span><br><span class="line"><span class="string">        width: 0;</span></span><br><span class="line"><span class="string">        height: 0;</span></span><br><span class="line"><span class="string">        border: 25px solid #49b1f5;</span></span><br><span class="line"><span class="string">        border-right-color: transparent;</span></span><br><span class="line"><span class="string">        border-radius: 25px;</span></span><br><span class="line"><span class="string">        -webkit-animation: rotate_pacman_half_up .5s 0s infinite;</span></span><br><span class="line"><span class="string">        animation: rotate_pacman_half_up .5s 0s infinite;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(2) &#123;</span></span><br><span class="line"><span class="string">        width: 0;</span></span><br><span class="line"><span class="string">        height: 0;</span></span><br><span class="line"><span class="string">        border: 25px solid #49b1f5;</span></span><br><span class="line"><span class="string">        border-right-color: transparent;</span></span><br><span class="line"><span class="string">        border-radius: 25px;</span></span><br><span class="line"><span class="string">        -webkit-animation: rotate_pacman_half_down .5s 0s infinite;</span></span><br><span class="line"><span class="string">        animation: rotate_pacman_half_down .5s 0s infinite;</span></span><br><span class="line"><span class="string">        margin-top: -50px;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    @-webkit-keyframes rotate_pacman_half_up &#123;0% &#123;transform: rotate(270deg)&#125;50% &#123;transform: rotate(1turn)&#125;to &#123;transform: rotate(270deg)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @keyframes rotate_pacman_half_up &#123;0% &#123;transform: rotate(270deg)&#125;50% &#123;transform: rotate(1turn)&#125;to &#123;transform: rotate(270deg)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @-webkit-keyframes rotate_pacman_half_down &#123;0% &#123;transform: rotate(90deg)&#125;50% &#123;transform: rotate(0deg)&#125;to &#123;transform: rotate(90deg)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @keyframes rotate_pacman_half_down &#123;0% &#123;transform: rotate(90deg)&#125;50% &#123;transform: rotate(0deg)&#125;to &#123;transform: rotate(90deg)&#125;&#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    @-webkit-keyframes pacman-balls &#123;75% &#123;opacity: .7&#125;to &#123;transform: translate(-100px, -6.25px)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @keyframes pacman-balls &#123;75% &#123;opacity: .7&#125;to &#123;transform: translate(-100px, -6.25px)&#125;&#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">   </span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(3),</span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(4),</span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(5),</span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(6)&#123;</span></span><br><span class="line"><span class="string">        background-color: #49b1f5;</span></span><br><span class="line"><span class="string">        width: 15px;</span></span><br><span class="line"><span class="string">        height: 15px;</span></span><br><span class="line"><span class="string">        border-radius: 100%;</span></span><br><span class="line"><span class="string">        margin: 2px;</span></span><br><span class="line"><span class="string">        width: 10px;</span></span><br><span class="line"><span class="string">        height: 10px;</span></span><br><span class="line"><span class="string">        position: absolute;</span></span><br><span class="line"><span class="string">        transform: translateY(-6.25px);</span></span><br><span class="line"><span class="string">        top: 25px;</span></span><br><span class="line"><span class="string">        left: 100px;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .loading-text&#123;</span></span><br><span class="line"><span class="string">        margin-bottom: 20vh;</span></span><br><span class="line"><span class="string">        text-align: center;</span></span><br><span class="line"><span class="string">        color: #2c3e50;</span></span><br><span class="line"><span class="string">        font-size: 2rem;</span></span><br><span class="line"><span class="string">        box-sizing: border-box;</span></span><br><span class="line"><span class="string">        padding: 0 10px;</span></span><br><span class="line"><span class="string">        text-shadow: 0 2px 10px rgba(0,0,0,0.2);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    @media only screen and (max-width: 500px) &#123;</span></span><br><span class="line"><span class="string">         .loading-text&#123;</span></span><br><span class="line"><span class="string">            font-size: 1.5rem;</span></span><br><span class="line"><span class="string">         &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .fadeout &#123;</span></span><br><span class="line"><span class="string">        opacity: 0;</span></span><br><span class="line"><span class="string">        filter: alpha(opacity=0);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    /* logo出现动画 */</span></span><br><span class="line"><span class="string">    @-webkit-keyframes fadeInDown&#123;0%&#123;opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)&#125;100%&#123;opacity:1;-webkit-transform:none;transform:none&#125;&#125;</span></span><br><span class="line"><span class="string">    @keyframes fadeInDown&#123;0%&#123;opacity:0;-webkit-transform:translate3d(0,-100%,0);&#125;&#125;</span></span><br><span class="line"><span class="string"> &lt;/style&gt;</span></span><br><span class="line"><span class="string"> &lt;script&gt;</span></span><br><span class="line"><span class="string">(function () &#123;</span></span><br><span class="line"><span class="string">    const loaded = function()&#123;</span></span><br><span class="line"><span class="string">       setTimeout(function()&#123;</span></span><br><span class="line"><span class="string">            const loader = document.getElementById(&quot;loading-container&quot;);</span></span><br><span class="line"><span class="string">            loader.className=&quot;fadeout&quot; ;//使用渐隐的方法淡出loading page</span></span><br><span class="line"><span class="string">            // document.getElementById(&quot;body-wrap&quot;).style.display=&quot;flex&quot;;</span></span><br><span class="line"><span class="string">            setTimeout(function()&#123;</span></span><br><span class="line"><span class="string">                loader.style.display=&quot;none&quot;;</span></span><br><span class="line"><span class="string">            &#125;,1000); </span></span><br><span class="line"><span class="string">        &#125;,1000);//强制显示loading page 1s  </span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    loaded();</span></span><br><span class="line"><span class="string">&#125;)()</span></span><br><span class="line"><span class="string"> &lt;/script&gt;`</span>;</span><br><span class="line">     <span class="keyword">const</span> injectBody = <span class="string">`</span></span><br><span class="line"><span class="string"> &lt;div id=&quot;loading-container&quot;&gt;</span></span><br><span class="line"><span class="string">     &lt;p class=&quot;loading-text&quot;&gt;玩命加载中 . . . &lt;/p&gt; </span></span><br><span class="line"><span class="string">     &lt;div class=&quot;loading-image&quot;&gt;</span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt; </span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">     &lt;/div&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;`</span>;</span><br><span class="line">     <span class="keyword">if</span> (<span class="regexp">/&lt;\/head&gt;/gi</span>.test(htmlContent)) &#123;</span><br><span class="line">         <span class="keyword">let</span> lastIndex = htmlContent.lastIndexOf(<span class="string">&#x27;&lt;/head&gt;&#x27;</span>);</span><br><span class="line">         htmlContent = htmlContent.substring(<span class="number">0</span>, lastIndex) + injectHead + htmlContent.substring(lastIndex, htmlContent.length);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span> (<span class="regexp">/&lt;body&gt;/gi</span>.test(htmlContent)) &#123;</span><br><span class="line">         <span class="keyword">let</span> index = htmlContent.indexOf(<span class="string">&#x27;&lt;body&gt;&#x27;</span>);</span><br><span class="line">         htmlContent = htmlContent.substring(<span class="number">0</span>, index) + injectBody + htmlContent.substring(index, htmlContent.length);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> htmlContent;</span><br><span class="line"> &#125;, <span class="number">1</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CloudFlare的Workers</title>
      <link href="//9198.html"/>
      <url>//9198.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CloudFlare的Workers回源IP加速访问"><a href="#CloudFlare的Workers回源IP加速访问" class="headerlink" title="CloudFlare的Workers回源IP加速访问"></a>CloudFlare的Workers回源IP加速访问</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我的Hexo博客一直部署在Github，但是国内的GithubCDN节点被DNS污染了，只能连接美国的Github。</p><p>固然。速度不是很快。PING都200+ms</p><p>所以我开启了CloudFlare的CDN，但是还是不太理想。CloudFlare默认分配的免费节点已经被玩坏了。</p><p>然鹅，CloudFlare有免费的Workers，支持 JavaScript、Rust、C 、 C++ </p><p><img src="https://pic.baixiongz.com/2020/08/02/c88f724506443.png" alt="1.png"></p><h1 id="部署Workers"><a href="#部署Workers" class="headerlink" title="部署Workers"></a>部署Workers</h1><p>你得先有CloudFlare的账号<a href="https://dash.cloudflare.com/">CloudFlare</a></p><p>然后打开Workers：///我不会告诉你我哪里来的那么多域名的/滑稽<a href="/post/f3a0.html">/post/f3a0.html</a></p><p><img src="https://pic.baixiongz.com/2020/08/02/3e4438628280e.png" alt="TIM截图20200802100021.png"></p><p>然后我们创建Workers。我记得初次打开会有提示设置子域的。</p><p><img src="https://pic.baixiongz.com/2020/08/02/f520d5c0f0a56.png" alt="TIM截图20200802101937.png"></p><p>之后打开如下界面，把脚本中的代码全部删除，然后复制以下代码</p><p><img src="https://pic.baixiongz.com/2020/08/02/bd2b1dda087b8.png" alt="TIM截图20200802102212.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * static files (404.html, sw.js, conf.js)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> ASSET_URL = <span class="string">&#x27;https://www.yelow.ga/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> JS_VER = <span class="number">10</span></span><br><span class="line"><span class="keyword">const</span> MAX_RETRY = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** <span class="doctag">@type <span class="type">&#123;RequestInit&#125;</span> </span>*/</span></span><br><span class="line"><span class="keyword">const</span> PREFLIGHT_INIT = &#123;</span><br><span class="line">  <span class="attr">status</span>: <span class="number">204</span>,</span><br><span class="line">  <span class="attr">headers</span>: <span class="keyword">new</span> Headers(&#123;</span><br><span class="line">    <span class="string">&#x27;access-control-allow-origin&#x27;</span>: <span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;access-control-allow-methods&#x27;</span>: <span class="string">&#x27;GET,POST,PUT,PATCH,TRACE,DELETE,HEAD,OPTIONS&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;access-control-max-age&#x27;</span>: <span class="string">&#x27;1728000&#x27;</span>,</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;any&#125;</span> <span class="variable">body</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">status</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Object&lt;string, string&gt;&#125;</span> <span class="variable">headers</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeRes</span>(<span class="params">body, status = <span class="number">200</span>, headers = &#123;&#125;</span>) </span>&#123;</span><br><span class="line">  headers[<span class="string">&#x27;--ver&#x27;</span>] = JS_VER</span><br><span class="line">  headers[<span class="string">&#x27;access-control-allow-origin&#x27;</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Response(body, &#123;status, headers&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>urlStr </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">newUrl</span>(<span class="params">urlStr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> URL(urlStr)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">addEventListener(<span class="string">&#x27;fetch&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> ret = fetchHandler(e)</span><br><span class="line">    .catch(<span class="function"><span class="params">err</span> =&gt;</span> makeRes(<span class="string">&#x27;cfworker error:\n&#x27;</span> + err.stack, <span class="number">502</span>))</span><br><span class="line">  e.respondWith(ret)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;FetchEvent&#125;</span> </span>e </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchHandler</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> req = e.request</span><br><span class="line">  <span class="keyword">const</span> urlStr = req.url</span><br><span class="line">  <span class="keyword">const</span> urlObj = <span class="keyword">new</span> URL(urlStr)</span><br><span class="line">  <span class="keyword">const</span> path = urlObj.href.substr(urlObj.origin.length)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (urlObj.protocol === <span class="string">&#x27;http:&#x27;</span>) &#123;</span><br><span class="line">    urlObj.protocol = <span class="string">&#x27;https:&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">&#x27;&#x27;</span>, <span class="number">301</span>, &#123;</span><br><span class="line">      <span class="string">&#x27;strict-transport-security&#x27;</span>: <span class="string">&#x27;max-age=99999999; includeSubDomains; preload&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;location&#x27;</span>: urlObj.href,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (path.startsWith(<span class="string">&#x27;/http/&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> httpHandler(req, path.substr(<span class="number">6</span>))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">switch</span> (path) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;/http&#x27;</span>:</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">&#x27;请更新 cfworker 到最新版本!&#x27;</span>)</span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;/ws&#x27;</span>:</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">&#x27;not support&#x27;</span>, <span class="number">400</span>)</span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;/works&#x27;</span>:</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">&#x27;it works&#x27;</span>)</span><br><span class="line">  <span class="attr">default</span>:</span><br><span class="line">    <span class="comment">// static files</span></span><br><span class="line">    <span class="keyword">return</span> fetch(ASSET_URL + path)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Request&#125;</span> <span class="variable">req</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> <span class="variable">pathname</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">httpHandler</span>(<span class="params">req, pathname</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> reqHdrRaw = req.headers</span><br><span class="line">  <span class="keyword">if</span> (reqHdrRaw.has(<span class="string">&#x27;x-jsproxy&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> Response.error()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// preflight</span></span><br><span class="line">  <span class="keyword">if</span> (req.method === <span class="string">&#x27;OPTIONS&#x27;</span> &amp;&amp;</span><br><span class="line">      reqHdrRaw.has(<span class="string">&#x27;access-control-request-headers&#x27;</span>)</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Response(<span class="literal">null</span>, PREFLIGHT_INIT)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> acehOld = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">let</span> rawSvr = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">let</span> rawLen = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">let</span> rawEtag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> reqHdrNew = <span class="keyword">new</span> Headers(reqHdrRaw)</span><br><span class="line">  reqHdrNew.set(<span class="string">&#x27;x-jsproxy&#x27;</span>, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 此处逻辑和 http-dec-req-hdr.lua 大致相同</span></span><br><span class="line">  <span class="comment">// https://github.com/EtherDream/jsproxy/blob/master/lua/http-dec-req-hdr.lua</span></span><br><span class="line">  <span class="keyword">const</span> refer = reqHdrNew.get(<span class="string">&#x27;referer&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> query = refer.substr(refer.indexOf(<span class="string">&#x27;?&#x27;</span>) + <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">if</span> (!query) &#123;</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">&#x27;missing params&#x27;</span>, <span class="number">403</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> param = <span class="keyword">new</span> URLSearchParams(query)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [k, v] <span class="keyword">of</span> <span class="built_in">Object</span>.entries(param)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (k.substr(<span class="number">0</span>, <span class="number">2</span>) === <span class="string">&#x27;--&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">// 系统信息</span></span><br><span class="line">      <span class="keyword">switch</span> (k.substr(<span class="number">2</span>)) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;aceh&#x27;</span>:</span><br><span class="line">        acehOld = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;raw-info&#x27;</span>:</span><br><span class="line">        [rawSvr, rawLen, rawEtag] = v.split(<span class="string">&#x27;|&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 还原 HTTP 请求头</span></span><br><span class="line">      <span class="keyword">if</span> (v) &#123;</span><br><span class="line">        reqHdrNew.set(k, v)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        reqHdrNew.delete(k)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!param.has(<span class="string">&#x27;referer&#x27;</span>)) &#123;</span><br><span class="line">    reqHdrNew.delete(<span class="string">&#x27;referer&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// cfworker 会把路径中的 `//` 合并成 `/`</span></span><br><span class="line">  <span class="keyword">const</span> urlStr = pathname.replace(<span class="regexp">/^(https?):\/+/</span>, <span class="string">&#x27;$1://&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> urlObj = newUrl(urlStr)</span><br><span class="line">  <span class="keyword">if</span> (!urlObj) &#123;</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">&#x27;invalid proxy url: &#x27;</span> + urlStr, <span class="number">403</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@type <span class="type">&#123;RequestInit&#125;</span> </span>*/</span></span><br><span class="line">  <span class="keyword">const</span> reqInit = &#123;</span><br><span class="line">    <span class="attr">method</span>: req.method,</span><br><span class="line">    <span class="attr">headers</span>: reqHdrNew,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&#x27;manual&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (req.method === <span class="string">&#x27;POST&#x27;</span>) &#123;</span><br><span class="line">    reqInit.body = req.body</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> proxy(urlObj, reqInit, acehOld, rawLen, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;URL&#125;</span> </span>urlObj </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;RequestInit&#125;</span> </span>reqInit </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>retryTimes </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">proxy</span>(<span class="params">urlObj, reqInit, acehOld, rawLen, retryTimes</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> fetch(urlObj.href, reqInit)</span><br><span class="line">  <span class="keyword">const</span> resHdrOld = res.headers</span><br><span class="line">  <span class="keyword">const</span> resHdrNew = <span class="keyword">new</span> Headers(resHdrOld)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> expose = <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [k, v] <span class="keyword">of</span> resHdrOld.entries()) &#123;</span><br><span class="line">    <span class="keyword">if</span> (k === <span class="string">&#x27;access-control-allow-origin&#x27;</span> ||</span><br><span class="line">        k === <span class="string">&#x27;access-control-expose-headers&#x27;</span> ||</span><br><span class="line">        k === <span class="string">&#x27;location&#x27;</span> ||</span><br><span class="line">        k === <span class="string">&#x27;set-cookie&#x27;</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">const</span> x = <span class="string">&#x27;--&#x27;</span> + k</span><br><span class="line">      resHdrNew.set(x, v)</span><br><span class="line">      <span class="keyword">if</span> (acehOld) &#123;</span><br><span class="line">        expose = expose + <span class="string">&#x27;,&#x27;</span> + x</span><br><span class="line">      &#125;</span><br><span class="line">      resHdrNew.delete(k)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (acehOld &amp;&amp;</span><br><span class="line">      k !== <span class="string">&#x27;cache-control&#x27;</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">&#x27;content-language&#x27;</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">&#x27;content-type&#x27;</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">&#x27;expires&#x27;</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">&#x27;last-modified&#x27;</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">&#x27;pragma&#x27;</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      expose = expose + <span class="string">&#x27;,&#x27;</span> + k</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (acehOld) &#123;</span><br><span class="line">    expose = expose + <span class="string">&#x27;,--s&#x27;</span></span><br><span class="line">    resHdrNew.set(<span class="string">&#x27;--t&#x27;</span>, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// verify</span></span><br><span class="line">  <span class="keyword">if</span> (rawLen) &#123;</span><br><span class="line">    <span class="keyword">const</span> newLen = resHdrOld.get(<span class="string">&#x27;content-length&#x27;</span>) || <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">const</span> badLen = (rawLen !== newLen)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (badLen) &#123;</span><br><span class="line">      <span class="keyword">if</span> (retryTimes &lt; MAX_RETRY) &#123;</span><br><span class="line">        urlObj = <span class="keyword">await</span> parseYtVideoRedir(urlObj, newLen, res)</span><br><span class="line">        <span class="keyword">if</span> (urlObj) &#123;</span><br><span class="line">          <span class="keyword">return</span> proxy(urlObj, reqInit, acehOld, rawLen, retryTimes + <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> makeRes(res.body, <span class="number">400</span>, &#123;</span><br><span class="line">        <span class="string">&#x27;--error&#x27;</span>: <span class="string">`bad len: <span class="subst">$&#123;newLen&#125;</span>, except: <span class="subst">$&#123;rawLen&#125;</span>`</span>,</span><br><span class="line">        <span class="string">&#x27;access-control-expose-headers&#x27;</span>: <span class="string">&#x27;--error&#x27;</span>,</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (retryTimes &gt; <span class="number">1</span>) &#123;</span><br><span class="line">      resHdrNew.set(<span class="string">&#x27;--retry&#x27;</span>, retryTimes)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> status = res.status</span><br><span class="line"></span><br><span class="line">  resHdrNew.set(<span class="string">&#x27;access-control-expose-headers&#x27;</span>, expose)</span><br><span class="line">  resHdrNew.set(<span class="string">&#x27;access-control-allow-origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">  resHdrNew.set(<span class="string">&#x27;--s&#x27;</span>, status)</span><br><span class="line">  resHdrNew.set(<span class="string">&#x27;--ver&#x27;</span>, JS_VER)</span><br><span class="line"></span><br><span class="line">  resHdrNew.delete(<span class="string">&#x27;content-security-policy&#x27;</span>)</span><br><span class="line">  resHdrNew.delete(<span class="string">&#x27;content-security-policy-report-only&#x27;</span>)</span><br><span class="line">  resHdrNew.delete(<span class="string">&#x27;clear-site-data&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (status === <span class="number">301</span> ||</span><br><span class="line">      status === <span class="number">302</span> ||</span><br><span class="line">      status === <span class="number">303</span> ||</span><br><span class="line">      status === <span class="number">307</span> ||</span><br><span class="line">      status === <span class="number">308</span></span><br><span class="line">  ) &#123;</span><br><span class="line">    status = status + <span class="number">10</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Response(res.body, &#123;</span><br><span class="line">    status,</span><br><span class="line">    <span class="attr">headers</span>: resHdrNew,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;URL&#125;</span> </span>urlObj </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isYtUrl</span>(<span class="params">urlObj</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    urlObj.host.endsWith(<span class="string">&#x27;.googlevideo.com&#x27;</span>) &amp;&amp;</span><br><span class="line">    urlObj.pathname.startsWith(<span class="string">&#x27;/videoplayback&#x27;</span>)</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;URL&#125;</span> </span>urlObj </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>newLen </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Response&#125;</span> </span>res </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">parseYtVideoRedir</span>(<span class="params">urlObj, newLen, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (newLen &gt; <span class="number">2000</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!isYtUrl(urlObj)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> res.text()</span><br><span class="line">    urlObj = <span class="keyword">new</span> URL(data)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!isYtUrl(urlObj)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> urlObj</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接下来，还没好</p><p>把代码里的第六行改成你的博客地址。比如我的就是<a href="https://henryhe613.github.io/blog/">https://henryhe613.github.io/blog/</a></p><p>之后左上角重命名一下你的Worker，方便以后管理。</p><p><img src="https://pic.baixiongz.com/2020/08/02/73676d0a53fbe.png" alt="TIM截图20200802102417.png"></p><p>然后中下方点击保存，还可以测试一下。如果返回200，就说明你的Worker没问题了。返回500，你可以检查一下代码最后是不是还有4行我的版权信息/滑稽脸</p><p>保存成功后，可以看到如下的信息。这是我的Worker，你的应该还没有<code>请求数</code>。</p><p><img src="https://pic.baixiongz.com/2020/08/02/fb5485ce406fb.png" alt="TIM截图20200802102829.png"></p><h1 id="使用Worker"><a href="#使用Worker" class="headerlink" title="使用Worker"></a>使用Worker</h1><p>我们回到DNS设置界面，新增<code>wwws</code>指向你的<code>Github Pages</code>。并且，记得打开CDN加速。</p><p><img src="https://pic.baixiongz.com/2020/08/02/c9392aeaf16d9.png" alt="TIM截图20200802103041.png"></p><p>删除原来www的解析，我们要新增几个A记录。</p><p>把www指向以下地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">==========</span><br><span class="line">引用了大佬CYF搜集的CDN节点</span><br><span class="line">作者：CYF</span><br><span class="line">==========</span><br><span class="line"></span><br><span class="line">108.162.236.1/24 联通 走美国</span><br><span class="line">172.64.32.1/24 移动 走香港</span><br><span class="line">104.16.160.1/24 电信 走美国洛杉矶</span><br><span class="line">172.64.0.0/24 电信 美国旧金山</span><br><span class="line">104.20.157.0/24 联通 走日本</span><br><span class="line">104.28.14.0/24 移动 走新加坡</span><br><span class="line">104.23.240.0-104.23.243.254</span><br><span class="line">162.159.208.4-162.159.208.103</span><br><span class="line">162.159.209.4-162.159.209.103</span><br><span class="line">162.159.210.4-162.159.210.103</span><br><span class="line">162.159.211.4-162.159.211.103</span><br><span class="line">104.20.157.2 </span><br><span class="line">104.18.62.2 </span><br><span class="line">141.101.115.3 </span><br><span class="line">104.16.160.3</span><br><span class="line">162.159.211.4-103</span><br><span class="line">103.21.244.0/22</span><br><span class="line">103.22.200.0/22</span><br><span class="line">103.31.4.0/22</span><br><span class="line">104.16.0.0/12</span><br><span class="line">108.162.192.0/18</span><br><span class="line">131.0.72.0/22</span><br><span class="line">141.101.64.0/18</span><br><span class="line">162.158.0.0/15</span><br><span class="line">172.64.0.0/13</span><br><span class="line">173.245.48.0/20</span><br><span class="line">188.114.96.0/20</span><br><span class="line">190.93.240.0/20</span><br><span class="line">197.234.240.0/22</span><br><span class="line">198.41.128.0/17</span><br><span class="line">104.23.240.*</span><br><span class="line">172.64.32.*</span><br><span class="line">104.16.160.*</span><br><span class="line">108.162.236.*</span><br><span class="line">162.158.133.* </span><br><span class="line">198.41.214.*</span><br><span class="line">198.41.212.*</span><br><span class="line">198.41.208.*</span><br><span class="line">198.41.209.*</span><br><span class="line">172.64.32.*</span><br><span class="line">141.101.115.*</span><br><span class="line">172.64.0. *</span><br><span class="line">172.64.16.* </span><br><span class="line">104.18.48.0-104.18.63.255</span><br><span class="line">104.24.112.0-104.24.127.255</span><br><span class="line">104.27.128.0-104.27.143.255</span><br><span class="line">104.28.0.0-104.28.15.255</span><br><span class="line">104.28.16.0-31.255</span><br><span class="line">104.27.144.0-243.254</span><br><span class="line">104.23.240.0-243.254</span><br><span class="line">1.0.0.0-254</span><br><span class="line">1.1.1.0-254</span><br><span class="line">104.16.0.0-79.255</span><br><span class="line">104.16.96.0-175.254</span><br><span class="line">104.16.192.0-207.255</span><br></pre></td></tr></table></figure><p>例如我就指向了这些地址：</p><p><img src="https://pic.baixiongz.com/2020/08/02/2cf28e7ebfdfe.png" alt="TIM截图20200802103403.png"></p><p>但是要记得，不能打开CDN加速！！！</p><p>不能打开CDN加速！！！</p><p>不能打开CDN加速！！！</p><p>然后我们给这个子域名加上Worker</p><p><img src="https://pic.baixiongz.com/2020/08/02/51dade958ebf8.png" alt="TIM截图20200802103454.png"></p><p>点击<code>添加路由</code>,</p><p><img src="https://pic.baixiongz.com/2020/08/02/36602c1fb3acc.png" alt="TIM截图20200802103620.png"></p><p>之后把你刚刚设置www的域名完整的写上，注意后面要加<code>/*</code>，不然只有首页才加速。worker选择刚刚我们保存的。</p><p><img src="https://pic.baixiongz.com/2020/08/02/ecc243f011551.png" alt="TIM截图20200802103555.png"></p><p>接下来就是72小时的等待了，DNS全球同步需要72小时。（其实也没那么慢的，几个钟头也差不多了。不过最快的方法，就是hosts/滑稽）</p><p>完结。。。</p>]]></content>
      
      
      <categories>
          
          <category> Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub的raw无法访问</title>
      <link href="//a15e.html"/>
      <url>//a15e.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>raw.githubusercontent.com收到Qos无法访问</p><p>其实没必要用梯子，修改hosts即可。</p><p>这是网上大神的hosts：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">199.232.4.133 raw.githubusercontent.com</span><br></pre></td></tr></table></figure><p>也可以去<a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a> 查</p><p>这是我查得的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">199.232.68.133 raw.githubusercontent.com</span><br></pre></td></tr></table></figure><p>hosts文件在这里（Windows）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\drivers\etc\hosts</span><br></pre></td></tr></table></figure><p>推荐UAC的Notepad，可以直接保存。</p><blockquote><p><strong>注意</strong><br>更新hosts后，需要cmd运行<code>ipconfig /flushdns</code>才行</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hosts </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>去掉Chromium的禁用开发者扩展提示</title>
      <link href="//7653.html"/>
      <url>//7653.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="去掉Chromium的禁用开发者扩展提示"><a href="#去掉Chromium的禁用开发者扩展提示" class="headerlink" title="去掉Chromium的禁用开发者扩展提示"></a>去掉Chromium的禁用开发者扩展提示</h1><p>对于开发人员来说，Chrome显然是一个必需品。庞大的插件库十分方便。<br>但是Google不知为什么就加了这么一个弹出，十分恶心。</p><p>祭出大神的dll替换工具，可点击下载。</p><p><a href="/images/%E5%8E%BB%E9%99%A4Chrome%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F.rar">去除Chrome请停用以开发者模式运行的扩展程序_点击下载</a></p><p>edge的二次开发做的不错，都把chrome.dll给改了。</p><p>像Cent Browser就没改，不过Cent和Chrome的图标确实有点像~~</p><p>安装目录在这里：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files (x86)\Microsoft\Edge\Application\83.0.478.37</span><br></pre></td></tr></table></figure><blockquote><p><em>注意</em><br>这是默认的安装路径，不同的版本号可能有所不同！！！</p></blockquote><p>记得把Edge关了，然后我们把msedge.dll改成chrome.dll，把刚刚下载的软件解压，拷贝到edge根目录下（就是刚刚代码块里的）</p><p>用管理员模式运行“去除Chrome请停用以开发者模式运行的扩展程序”，</p><p><img src="https://s1.ax1x.com/2020/05/24/YziUL8.png" alt="YziUL8.png"></p><p>点<code>应用</code>，成功后，把dll的名字改回msedge.dll。</p><p>再打开edge。</p><p>是不是OK了？</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Edge </tag>
            
            <tag> Chromium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新旧Edge浏览器共存</title>
      <link href="//6799.html"/>
      <url>//6799.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://s1.ax1x.com/2020/05/24/YxLOZq.png" alt="YxLOZq.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">~~</span><br><span class="line">1. 在Windows搜索中搜索组策略编辑器。</span><br><span class="line"></span><br><span class="line">2. 导航到计算机配置——》打开管理模板&gt; Microsoft Edge更新&gt;应用程序</span><br><span class="line"></span><br><span class="line">3. 选择“允许Microsoft Edge并排浏览器体验”。</span><br><span class="line"></span><br><span class="line">4. 点击“修改政策”设置。</span><br><span class="line"></span><br><span class="line">5. 选择“启用”，然后单击“确定”。</span><br><span class="line">~~</span><br></pre></td></tr></table></figure><p>以上是网上的方法，Chromium Edge v83版已不适用。</p><p>因为在gpedit里找不到<code>“允许Microsoft Edge并排浏览器体验”</code>。</p><p>现在只能用注册表。</p><p>把一下对应代码复制到.reg文件中，然后重新安装Chromium Edge就好了。</p><p>添加旧EDGE</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\EdgeUpdate]</span><br><span class="line">&quot;Allowsxs&quot;=dword:00000001</span><br></pre></td></tr></table></figure><p>移除旧EDGE</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">-[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\EdgeUpdate]</span><br><span class="line">&quot;Allowsxs&quot;=dword:00000001</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Edge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换Chromium内核浏览器无法上网</title>
      <link href="//dbe5.html"/>
      <url>//dbe5.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="更换Chromium内核浏览器无法上网、"><a href="#更换Chromium内核浏览器无法上网、" class="headerlink" title="更换Chromium内核浏览器无法上网、"></a>更换Chromium内核浏览器无法上网、</h1><p>说实话我的英语也不是特别好，所以一直再找<code>Github</code>汉化版。但是<code>Cent Browser</code>内嵌的<code>Google翻译</code>不咋地，老是抽。看网友都用<code>360极速浏览器</code>，我也真香了，用了360还比较良心的极速浏览器。</p><p>但是360也抽了。</p><p><img src="https://s1.ax1x.com/2020/05/23/Yxi63t.png" alt="Yxi63t.png"></p><p>于是我试试<code>遨游浏览器</code>，因为这个用的人也很多。</p><p>也抽了。</p><p><img src="https://s1.ax1x.com/2020/05/23/YxiTCn.png" alt="YxiTCn.png"></p><p>我好奇啊，连续两个浏览器抽了。</p><p>应该是我的环境问题。</p><p>我先把遨游换成IE内核。</p><p>“国产”浏览器大都是<code>Chromium</code>和<code>IE</code>双内核。</p><p>嘿嘿，遨游好了~~</p><p>那为什么Chromium不行？</p><p>我猜是三个浏览器用同一个内核所致。</p><figure class="highlight plaintext"><figcaption><span>Browser```我用了```PP谷歌助手```，之前为了访问谷歌，找到的这么一个插件。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">附上```PP谷歌助手```在[极简插件](https://chrome.zzzmh.cn/index) 的链接：[PP谷歌助手](https://chrome.zzzmh.cn/info?token=kahndhhhcnignmbbpiobmdlgjhgfkfil)</span><br><span class="line"></span><br><span class="line">之前我为了在家上网课不卡，把```PP谷歌助手```关了，结果没法上网。有种浏览器主页被劫持的味道。。。</span><br><span class="line"></span><br><span class="line">没办法，我把```PP谷歌助手```打开还。于是又可以上网了。</span><br><span class="line"></span><br><span class="line">所以我打算把```PP谷歌助手```移植到360上。</span><br><span class="line"></span><br><span class="line"># 解决办法</span><br><span class="line"></span><br><span class="line">打开```Cent Browser```的[扩展页](chrome://extensions/)</span><br><span class="line"></span><br><span class="line">打开右上角（不同浏览器可能不同）的```开发者模式```</span><br><span class="line"></span><br><span class="line">找到安装的```PP谷歌助手```。</span><br><span class="line"></span><br><span class="line">复制```PP谷歌助手```的ID。</span><br><span class="line"></span><br><span class="line">![YxkmeU.png](https://s1.ax1x.com/2020/05/23/YxkmeU.png)</span><br><span class="line"></span><br><span class="line">我这里的ID是：</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>ID：kahndhhhcnignmbbpiobmdlgjhgfkfil</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt;</span><br><span class="line">&gt;注意：不同版本的Extension的ID是不同的！！！</span><br><span class="line">&gt;</span><br><span class="line"></span><br><span class="line">然后去资源管理器里搜索这个ID。</span><br><span class="line"></span><br><span class="line">我是用```Everything```，这个软件快。</span><br><span class="line"></span><br><span class="line">![YxAS6x.png](https://s1.ax1x.com/2020/05/23/YxAS6x.png)</span><br><span class="line"></span><br><span class="line">![](https://raw.githubusercontent.com/HenryHe613/Pic/master/ScreenShot_20200523200316.png)</span><br><span class="line">一般搜索出来只有红框里的第二个，我这里其他的四个是我自己创建的。</span><br><span class="line"></span><br><span class="line">如果是```Cent Browser```的用户，可以直接使用一下链接（记得改成自己的用户名和安装路径哦）：</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>C:\Users{User Name}\AppData\Local\CentBrowser\User Data\Default\Extensions</p><pre><code></code></pre>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chromium </tag>
            
            <tag> 浏览器 </tag>
            
            <tag> vnp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电信网关F612破解</title>
      <link href="//9e79.html"/>
      <url>//9e79.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="电信家庭网关中兴F612破解超级账号"><a href="#电信家庭网关中兴F612破解超级账号" class="headerlink" title="电信家庭网关中兴F612破解超级账号"></a>电信家庭网关中兴F612破解超级账号</h1><blockquote><p>网上有许多教程，但是大都有误，这是站长亲自试验得出的方法。</p></blockquote><p>最近换了电信的千兆光猫，看见网上有类似教程，我就试了一下。</p><p>期间有许多坑，这里就不一一讲了。</p><p>打开电脑的CMD窗口</p><p>输入命令，一直Ping网关的128端口：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ping</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">1</span> -l <span class="number">128</span> -t</span><br></pre></td></tr></table></figure><p>不要关闭原来的窗口，再打开一个CMD，输入命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">1</span> <span class="number">10128</span></span><br></pre></td></tr></table></figure><p>账号：root<br>密码：Zte521</p><p>在telnet中输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sendcmd 1 DB p DevAuthInfo</span><br></pre></td></tr></table></figure><p>慢慢找，就能找到超级管理员密码了。<br>账号一般是telecomadmin</p><p>如果要把网关的拨号模式改为桥接模式，其实不用超级管理员账号的。</p><p><a href="http://192.168.1.1/bridge_route.gch">http://192.168.1.1/bridge_route.gch</a></p><p>打开这个网址即可了。</p>]]></content>
      
      
      <categories>
          
          <category> Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电信 </tag>
            
            <tag> 破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人常用网址/代码</title>
      <link href="//2361.html"/>
      <url>//2361.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>:laughing:</p><h1 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h1><ol><li><p><a href="https://imgchr.com/">路过图床</a></p></li><li><p><a href="https://www.dnspod.cn/">DNS Pod</a></p></li><li><p><a href="https://dash.cloudflare.com/">CloudFlare-Dashbroad</a></p></li><li><p><a href="https://github.com/">Github</a></p></li><li><p><a href="http://tool.chinaz.com/tools/hash.aspx">Hash生成-ChinaZ</a></p></li><li><p><a href="http://ping.chinaz.com/">Ping-ChinaZ</a></p></li><li><p><a href="https://picgo.github.io/PicGo-Doc/">PicGo</a></p></li><li><p><a href="https://coding.net/">Coding</a></p></li><li><p><a href="https://gitee.com/">码云</a></p></li><li><p><a href="https://drive.520526.xyz/">免费不限速网盘</a></p></li><li><p><a href="http://www.fontawesome.com.cn/">Font Awesome 中文网</a></p></li><li><p><a href="https://htmlcolorcodes.com/zh/">HTML颜色代码</a></p></li><li><p><a href="https://pic.baixiongz.com/">白熊图床</a> 免费100GB带API可搭配PicGo的图床</p></li><li><p><a href="https://pan.baixiongz.com/">白熊网盘</a> 免费2TB的良心网盘</p></li><li><p><a href="https://fast.io/">Fast.io</a> 全球CDN缓存你的文件，每月100GB流量</p></li><li><p><a href="https://www.npmjs.com/">NPM</a> 全球最大包管理服务。现已被Github收购</p></li><li><p><a href="https://vercel.com/dashboard">Vercel</a> 快速免费构建你的代码。静态博客部署台湾节点。</p></li></ol><h1 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h1><ol><li><p><a href="https://cn.bing.com/">Bing</a></p></li><li><p><a href="https://www2.bing.com/">Bing-2</a>  Bing在国内老是被DNS污染。可以访问www2.bing.com解决。</p></li></ol><p>如果要把&lt;www2.bing.com&gt;设置成地址栏搜索引擎，网址格式需这样设置：</p><p><img src="https://s1.ax1x.com/2020/05/24/YxXBge.png" alt="YxXBge.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//搜索引擎</span><br><span class="line">www2.bing.com</span><br><span class="line"></span><br><span class="line">//关键字</span><br><span class="line">www2.bing.com</span><br><span class="line"></span><br><span class="line">//网址格式（用“%s”代替搜索字词）</span><br><span class="line">https://www2.bing.com/search?q=%s</span><br></pre></td></tr></table></figure><ol start="3"><li><a href="https://www.magi.com/">Magi</a>     这是我很喜欢的一个人工智能搜索引擎<br>下面是设置方法：<br><img src="https://s1.ax1x.com/2020/05/24/YxjuqA.png" alt="YxjuqA.png"></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//搜索引擎</span><br><span class="line">Magi</span><br><span class="line"></span><br><span class="line">//关键字</span><br><span class="line">magi.com</span><br><span class="line"></span><br><span class="line">//网址格式（用“%s”代替搜索字词）</span><br><span class="line">https://magi.com/search?fr=opensearch&amp;q=%s</span><br></pre></td></tr></table></figure><h1 id="计算机"><a href="#计算机" class="headerlink" title="计算机"></a>计算机</h1><ol><li><p><a href="http://ip138.com/">ip138</a><br>  显示当前的IP地址</p></li><li><p><a href="https://greasyfork.org/zh-CN/">Greasy Fork</a><br> 脚本</p></li><li><p><a href="https://www.sojson.com/image/format.html">图片格式转换</a></p></li><li><p><a href="http://www.hackhw.com/">黑域基地</a></p></li><li><p><a href="https://www.appinn.com/">小众软件</a></p></li></ol><h1 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h1><ol><li><p><a href="http://www.pc6.com/">PC6下载站</a></p></li><li><p><a href="https://www.onlinedown.net/">华军软件园</a></p></li><li><p><a href="http://www.dayanzai.me/">大眼仔旭</a></p></li><li><p><a href="https://www.ypojie.com/">易破解</a></p></li></ol><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.gclmit.club/archives/1a205ea0.html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网址and代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>申请Freenom域名的正确做法</title>
      <link href="//f3a0.html"/>
      <url>//f3a0.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="申请Freenom域名的正确做法"><a href="#申请Freenom域名的正确做法" class="headerlink" title="申请Freenom域名的正确做法"></a>申请Freenom域名的正确做法</h1><p><a href="https://www.freenom.com/zh/index.html?lang=zh">Freenom官网</a></p><blockquote><p>注意：本教程是站长的亲身经验，会有很多坑，请大家多多包涵。</p></blockquote><p>对于新手个人站长，买一个几十块甚至几百块的域名显然不太合适。所以，Freenom出现了。它能帮我们免费注册.ga .ml .tk .gq .cf的顶级域名。这些顶级域名都是小国家的，分别是加蓬、马里共和国、托克劳群岛、赤道几内亚和中非共和国。<br>既然天上掉那么大个馅饼，谁不要呢？于是百度上出现了一堆关于Freenom域名申请的教程。然而，经过我的检验，这些教程要么是 <del>菜</del> 有误，要么就是 <del>赚流量</del> 不会。</p><h3 id="主要步骤："><a href="#主要步骤：" class="headerlink" title="主要步骤："></a>主要步骤：</h3><p> 1.加快Freenom的访问速度<br> 2.注册Freenom账号<br> 3.注册免费域名<br> 4.更改域名解析</p><h1 id="第一次尝试"><a href="#第一次尝试" class="headerlink" title="第一次尝试"></a>第一次尝试</h1><p>让我们先去Freenom官网瞅瞅。</p><p><a href="https://www.freenom.com/zh/index.html?lang=zh">Freenom官网</a></p><p>好慢，还没有图片，真丑。</p><p><img src="https://s1.ax1x.com/2020/05/10/Y8VKSJ.png" alt="Y8VKSJ.png"></p><p>更奇怪的是，，，我居然能够把搜索框的文字删掉。。。</p><p><img src="https://s1.ax1x.com/2020/05/10/Y8VlO1.png" alt="Y8VlO1.png"></p><p>这可把我吓坏了。这网站居然长这样。</p><p>上网一搜，嗯嗯，似乎需要梯子。</p><p>可以看看我之前的博文<a href="https://www.yelow.ga/2020/05/02/ti-zi/">梯子</a> ，但是这里用不着。但是我之前就用了，可以注册，但是更繁琐，我找了一个更好的方法。</p><p>但是还是有必要介绍原方法。</p><p>我拿来梯子，爬！！！</p><p>爬上了，才发现Freenom的网站原来还行，图片挺好的。于是输入我想要的域名，点击<code>Check availability</code>,搜索域名。</p><p><img src="https://s1.ax1x.com/2020/05/10/Y8epKs.png" alt="Y8epKs.png"></p><p>很好，我找了我要的域名。</p><p>那么，注册！！！</p><p><img src="https://s1.ax1x.com/2020/05/10/Y8e6zQ.png" alt="Y8e6zQ.png"></p><p>点击<code>现在获取</code>，then。。。</p><p><img src="https://s1.ax1x.com/2020/05/10/Y8eRLn.png" alt="Y8eRLn.png"></p><p>不可用？？</p><p>一个一个选，居然都不能选。换一个也是一样。</p><p>莫不是Freenom抽了？╰（‵□′）╯</p><h1 id="注册Freenom账号"><a href="#注册Freenom账号" class="headerlink" title="注册Freenom账号"></a>注册Freenom账号</h1><blockquote><p>这一步网上很多教程都省略了，没有Freenom账号，你在搜索域名时根本无法选域名。</p></blockquote><p>一顿Bing，发现是没注册的缘故。</p><p>那么注册一个账号吧，但是不知道入口。</p><p>再找，找到了，这Freenom真抠，藏这么深。</p><p><img src="https://s1.ax1x.com/2020/05/10/Y8m6k6.png" alt="Y8m6k6.png"></p><p>点击首页的<code>合作伙伴</code>，选择<code>开发人员</code>。</p><p><img src="https://s1.ax1x.com/2020/05/10/Y8mzBn.png" alt="Y8mzBn.png"></p><p>点击<code>&gt; 今天就获得一个随机的域账户！</code>。</p><p>变英文了。英文不好的同志，麻烦自己翻译一下啦/<del>/</del>/~ ~ ~ ~</p><p><img src="https://s1.ax1x.com/2020/05/10/Y8nrvQ.png" alt="Y8nrvQ.png"></p><p>再<code>1</code>处输入你的电子邮箱，然后点击<code>2</code>处确认发送邮件。</p><p>之后的过程不赘述了哈</p><blockquote><p>注意：提交不能太频繁了。不然Freenom把你列入黑名单就不成了。</p><p>还要，现在我乱填了个人信息，其实这也是我的习惯了哈哈</p></blockquote><h1 id="注册免费域名"><a href="#注册免费域名" class="headerlink" title="注册免费域名"></a>注册免费域名</h1><p>好了，回到首页，右上角有个<code>Sign in</code>，中文是<code>登入</code>。</p><p><img src="https://s1.ax1x.com/2020/05/10/Y8uri6.png" alt="Y8uri6.png"></p><p>输入注册的账号密码，点<code>Login</code>，登录吧。</p><p>别告诉我你找不到那里搜域名了，看下图：</p><p><img src="https://s1.ax1x.com/2020/05/10/Y8u4ot.png" alt="Y8u4ot.png"></p><p>找到了吧？</p><p>继续吧，搜索。</p><p><img src="https://s1.ax1x.com/2020/05/10/Y8KXcD.png" alt="Y8KXcD.png"></p><p>选好之后呢，选择<code>Checkout</code>，“购买<br>”</p><p><img src="https://s1.ax1x.com/2020/05/10/Y8MKNq.png" alt="Y8MKNq.png"></p><p>先不要改参数，把使用时间改为<code>12 Months @ Free</code>，然后信心十足地，按下<code>Continue</code>。</p><p><img src="https://s1.ax1x.com/2020/05/10/Y8M7rQ.png" alt="Y8M7rQ.png"></p><p>勾上小框框，终于可以<code>Complete Order</code>了。</p><p>但是相信大多数的人把接下来的英文翻译一下，都会发现注册没成功。</p><h1 id="让Freenom相信你不是机器人"><a href="#让Freenom相信你不是机器人" class="headerlink" title="让Freenom相信你不是机器人"></a>让Freenom相信你不是机器人</h1><p>又一顿Bing，发现是我的IP和注册时的地址不对应。</p><p>没办法，只能听Freenom的。</p><p>弄个免费的也真难，害（；´д｀）ゞ</p><p>网上都是介绍用ipip.net去搜索梯子爬出去的IP。但是成功率不高而且每次都需要配置一番。</p><p>我找到了FireFox。</p><p>先下载一个FireFox。</p><p><img src="https://s1.ax1x.com/2020/05/10/Y83yWt.png" alt="Y83yWt.png"></p><p>打开<code>附加组件</code>。</p><p><img src="https://s1.ax1x.com/2020/05/10/Y88pf1.png" alt="Y88pf1.png"></p><p>搜索<code>iGG谷歌访问助手</code>，并安装。<br>国内FireFox的速度还行。</p><p>然后爬这个助手的梯子，会发现你的IP根本没变就能很快访问Freenom。</p><p>然后，</p><p><img src="https://s1.ax1x.com/2020/05/10/Y88cN9.png" alt="Y88cN9.png"></p><p>把你的个人信息完善一下，只需要地址是真的即可。</p><p>再注册就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Freenom </tag>
            
            <tag> 免费域名申请 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>史上最好用的编辑器</title>
      <link href="//d87e.html"/>
      <url>//d87e.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>之前用win自带的<code>记事本</code>，功能太鸡肋了。啥都没有，而且最不能忍受的就是，微软的程序猿<del>自己认为</del>很聪明，给UTF-8加了BOM。</p><p>然后，许多代码出错emmm</p><p>直接上链接：<a href="npp.7.8.5.Installer.x64.exe">这里，v7.8.5_x64</a></p><p>附上哈希值，怕<code>CloudFlare</code>的<code>CDN</code>啥时候抽了，下载出错：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CRC32: 80A1EBD6</span><br><span class="line">MD5: CD8C07848895C989C81C9D88C8BFEA88</span><br><span class="line">SHA-1: 820C75A6E7B5835AB01E45DE728AE3434500ABF5</span><br></pre></td></tr></table></figure><h1 id="压力测试"><a href="#压力测试" class="headerlink" title="压力测试"></a>压力测试</h1><p><a href="a.zip">Start Test</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NotePad++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梯子</title>
      <link href="//c0a3.html"/>
      <url>//c0a3.html</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="0beca3de4070fba2bb3f173aa194439994d74487a66e27a6d536bf10938302ef">c6edc15832af92205655610fe2efe7a8ecf8f269b366384eb31b03fc482b84f3531b6359ee020bbf754df44463ff8c18955c989584c55a1f9433f377fc413421c194a4d7547a6d3b5ea28b773836ac46250e204eaf50a71208078c28d4195a1222c428527282e178c5b42bae6dee9ee285f264001c4f35be74a521c541c5163ba63eb05e94eec1f5f6f0461a91b7a8837a38941c4863e18a27d051918aa2a738cd7194d2fc3e7c692a027bc20d51354928d1ae557bed0dd46f58c5bff7b511b2a017de143b8df30086a73a4a40dedbd4034a7b4b014227eb8be2b470feb3c3590ea1fad2905556390539a466027126882ec6062b677af82660cf927c81f11ca560634b6e235cc57af1408ba8524c19b6fe2bd67f3ee962c75c7568a9185f7d832282cdab60d49b4eb465fce7a532e8f3cab6f6f6afbc2a7ce879a076197a6b215eb2146cf51952a24aa68b7c4f0c23a896190b867b17cddae5aecf614f7ec3c2c3b8eb310d87a335febd3b78e46cf6f6b18bf321dd6361f684d868667cf40934e023a8ac6f96500e1d5731dcf7902f80953ebfb946ef4b40106accbede00509763861366c0f2f995a1831ada7c7da95611fa506fe38a417e71f7b2fa4500b83f1d3c3bc0a05bdc5040c08051c2c350431974c629323af4070deb61615faf1415ff7a2c00a27a9225be78b65c7ac6e20e79843053ce6b4d95a984f014cd6ff0dce6ba070028d44676636be55f7c56b87b681e8ecdd90d7b56900159c8f035ba2159a5dbf00aaf8f00fb061d1f1893fe42c85a303484e1d7cc8ad06ff3c2f5d991e6a52a30b822dce8aa39a951cadd1774a00ad17070a1f72092f07a3fe336757f37845fe486bd68106278eed05b9d1a36e75c1f3e3369d90c933fbc16ddc6b67bce4133383564b1bb8dfb36342240797e331a638d992c2782f4af6a1f75658f2aed51af272001b729e85a14c0c012b29de44130a5dc5f059d6a7ea31ff937d678bfc1d9b2d60d52c700b6ab496f6e0bd936e0593d21b056ec089346e9e22ba2e26a588aafb5947beab9771f7623bb9c9f0bd4cf39f43dc09cc5ec9d540609d4a2cf5b60098a702f61eef16fb51406c488d31750ea08b4447494f0a6f609c92e0e8d1f85809c0e8d00b74df528dcebe1d618ef71650bce081ac21e1cb5420813e2f2542c9d31aac5e8079bb1470773173cf451126a37f7d32d13829c54581ecee140013d26c75364fe65a3c010b15c2836e314e93c09b23d7476dd453aa9092b39c66bd367804f41fa5e78d1e3f05e9c331828af973af8b79768a4c8a765bb8eccfce15662e593b5de9cd53fd27a30147e744a73b4c27fe911f7b64dd8de6ae08074b7253c7eccf79e42691e967da6a8f1490f572659cc12ffd71ac5ae49de8e7da2bd06467916f6ae618e4812ad0fd4a3cb52dc7d64411f542ded478596c9c8275afcb35acb652107d88e832c99f984f0c75c973f386e518b376c3d64b3a329f61b9ddcd1c1de4c21485acfc950c3823c9061d390987536706d1b84c2a344ec90a09d3a2626950d94efd633098d8fe70cf47e91a4cfe081f06e6486c951a454f7178fc662e5d93ab4fa677e224933b0bc41c8226c4435a02dd2e68ca354d2184911e739a8abe1308027eed2824787f0431fe1b50b6a8e2e724a39c2cdae990215b6b940365cd5210227d96c564880e8a3111e08bfe9ae0d7ed937beb8bac11e0eb283124f8df8bb8ddf3705820ac86caec7cdca3811e5015016a3a4544d45c140099b477fbc30f224bf97f3ecd0ac7411c77db4337a25ef930a75a636e7900b0ea634aae09416085f0e32b4801ca13d39269848fe006cc4c944cc3316c4ff70bed3ed47c4b3248c9f6fbdfd5d135a320717642472a66a95323c41a68e91a3b8581e41400d631173c7cab9513561f66b131765f78f661df4a9a44b53002cad0e46db3adc51e88aa607635b0ccaa9e71812889c4f080fc73c9fd9fc63173bb3b92247c19ae2483723595cd2b297240b17d6aea12ddbeebe9f89c6f1f22b2f10563e7d4894144480ab14ec1335ea71ddb4ff72ff884d69e2f8c2eaaf5003ac01f8de2be2e2ea7c2f6c94b45a40960c1bf03cbb4ceb18270c23165742ef1605af70b4dbffda82e0494591158ce325f39d3bd3c13f9cecc81f42728b20332504b97a6c4cbe3befb5cc7a684e23683a9e21b9ec261515daf2386dd81c861959e60abec35ebbca9955110f445cff1640f2dcf1b5cd3ab9f53336281fb7d8ac6efe6109f4b767a71adc39094d8cc580921ad3baf56fcd870ba5d677dafd7a7fd536004db793b5f7ad3e25102d671c684e5a9032f9432b6e0be9268f3fcdd7cab79227ca0e3967b66ae7d81a861ad2b86de1d28bbe134944db436bbc269089d8e6da52479c10de388bf45f53958f3679088f4242a496a0deaa10098516eff5c06a5863034705a46be9ea0a2c9651dcaf51d02af4cb26d5e02da7e55fae8643317a67d0ad350f11b0024053ec64746b02ea9597221e239c52649adfff2e1e84a043c1877aa349c4a56ff17c6b7c1e61b4863051f1337a359aac7bc5ba63ad891ed3dabda183acfa17fb32abea1480449d51cce0acab2cbe68b9da5f8089dd7c0d57a8788a1f1f1f4ecaeeefc33c0fbda4c2f4e06172d2431566acb9edfbb3cdf53cfa02ea63d7a957a1e625d2967b57d8551d2c4d86bd4ee3151da09d77931e7c680b58f06b9ac944def42c512a727f485799d9162df319efc1bd48ae50e57bb6cb94557ece2457e7c1b3ef282abe113eb9e550a44e5fa3ff05fa3bbdb75e9915a53f77bf5528a3a60b6ae9e0eb6f0ffcb9bf0299b29667b99234954c0adc17d63a09e866a5986aa3cacf51d5342a9878fb0e9db599</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 梯子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一次使用GitHub+Hexo</title>
      <link href="//1583.html"/>
      <url>//1583.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>Git下载：<a href="https://tperch-my.sharepoint.com/personal/perch_tperch_onmicrosoft_com/_layouts/15/download.aspx?UniqueId=661c1b1d-3405-4e3b-812b-7ca0b8635ddd&Translate=false&tempauth=eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTBmZjEtY2UwMC0wMDAwMDAwMDAwMDAvdHBlcmNoLW15LnNoYXJlcG9pbnQuY29tQDgzMTNlYTE3LTAzN2ItNDlkNS05NmU1LTJjNmZjY2FiZjg0ZiIsImlzcyI6IjAwMDAwMDAzLTAwMDAtMGZmMS1jZTAwLTAwMDAwMDAwMDAwMCIsIm5iZiI6IjE1OTIwNDY5NjYiLCJleHAiOiIxNTkyMDUwNTY2IiwiZW5kcG9pbnR1cmwiOiJ6OEFQY2ljdWdYb1FIZm5rTmZoZXV2cUhsTExheWI0ZWVqb0d1WEw5L2U0PSIsImVuZHBvaW50dXJsTGVuZ3RoIjoiMTU4IiwiaXNsb29wYmFjayI6IlRydWUiLCJjaWQiOiJNMlExTURJek9USXROalF6WXkwME5EazFMVGhtTnpZdFpUWmlPV1kyTkdKbU56VmwiLCJ2ZXIiOiJoYXNoZWRwcm9vZnRva2VuIiwic2l0ZWlkIjoiWldWak5UZGlZV0V0TURKaU55MDBaamczTFRrMVpERXROMkkzWTJGaE5tWmpZakZqIiwiYXBwX2Rpc3BsYXluYW1lIjoiQ2xvdWRyZXZlICIsImdpdmVuX25hbWUiOiLmoJYiLCJmYW1pbHlfbmFtZSI6IuaenSIsImFwcGlkIjoiZmU5NTU1MmQtMTA4OS00NzU4LTgyYzktYzJkNmU3MDM5ZTk3IiwidGlkIjoiODMxM2VhMTctMDM3Yi00OWQ1LTk2ZTUtMmM2ZmNjYWJmODRmIiwidXBuIjoicGVyY2hAdHBlcmNoLm9ubWljcm9zb2Z0LmNvbSIsInB1aWQiOiIxMDAzMjAwMEMwRUJGQjNBIiwiY2FjaGVrZXkiOiIwaC5mfG1lbWJlcnNoaXB8MTAwMzIwMDBjMGViZmIzYUBsaXZlLmNvbSIsInNjcCI6ImFsbGZpbGVzLndyaXRlIiwidHQiOiIyIiwidXNlUGVyc2lzdGVudENvb2tpZSI6bnVsbH0.bUZOeVhBWm1Rdk9BQi9PT1crTWd0SDdtN3pOUWp6NUVJTksvcFRqTEJVND0&ApiVersion=2.0">传送门</a></p></blockquote><h1 id="以小白的眼光教你搭建Github-Hexo"><a href="#以小白的眼光教你搭建Github-Hexo" class="headerlink" title="以小白的眼光教你搭建Github+Hexo"></a>以小白的眼光教你搭建Github+Hexo</h1><p>   之前我接触过的博客程序，是用PHP的Wordpress。但是毕竟我是个初三学生，没法租服务器，也就放弃了搭建个人博客的想法。</p><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1587307981577&di=cdea9fc487d45efc2eb125834b95f0c7&imgtype=0&src=http://5b0988e595225.cdn.sohucs.com/q_70,c_zoom,w_640/images/20190809/0ce331bec58c4cbf823ac58f32fdbdb9.jpeg" alt="我太难了"></p><p>但是后来，我在知乎上遇到了一个大佬，和我一样呢，也是初三。推荐一下TA的博客吧，做个友链。</p><p><img src="https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=3488729154,2763255392&fm=26&gp=0.jpg" alt="hh"></p><p>这是TA的Blog：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://blog.cyfan.top/ </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>话不多说，直接讲怎么搭建Hexo。</p><h2 id="建立Github仓库"><a href="#建立Github仓库" class="headerlink" title="建立Github仓库"></a>建立Github仓库</h2><blockquote><p>注释：这个github仓库是用来放网站的！！！</p></blockquote><p>Github不用我多说，上官网 <a href="https://github.com/">https://github.com</a> .注册账号。英文不好的话emmm我也不能救你，用翻译软件吧。</p><p><img src="http://www.17qq.com/img_biaoqing/29545814.jpeg" alt="无能为力"></p><p>创建一个仓库，看图！！</p><p><img src="https://s1.ax1x.com/2020/04/19/JKOKfO.png" alt="创建仓库_1"></p><p><img src="https://s1.ax1x.com/2020/04/19/JKObAx.png" alt="创建仓库_2"></p><p>这时候，你的仓库应该是这样的。</p><p><img src="https://s1.ax1x.com/2020/04/25/JyCeJS.png" alt="仓库_1"></p><p>但这是我创建README.md文件后的样子，如果你没有创建README.md文件，那么你的仓库可能是这样的：</p><p><img src="https://s1.ax1x.com/2020/04/25/JyCmRg.png" alt="仓库_2"></p><p>不管怎样，都是对的。</p><p>然后，我们来创建Pages。</p><h2 id="创建Github-Pages"><a href="#创建Github-Pages" class="headerlink" title="创建Github Pages"></a>创建Github Pages</h2><p>在你的仓库上方，会有一个“Settings”按钮，点击它。</p><p><img src="https://s1.ax1x.com/2020/04/25/JyFKQe.png" alt="Settings"></p><p>往下翻，你会看到Github Pages栏，像下图一样：</p><p><img src="https://s1.ax1x.com/2020/04/25/JyFDwn.png" alt="Github Pages"></p><p>选择Choose a theme（翻译：选择一个主题），会出现以下界面：</p><p><img src="https://s1.ax1x.com/2020/04/25/JyEQL4.png" alt="Github Pages_2"></p><p>这样，会出现如下图所示的界面：</p><p><img src="https://s1.ax1x.com/2020/04/25/JyV6HJ.png" alt="Github Pages_3"></p><p>现在可以暂时不用管Github了。</p>]]></content>
      
      
      <categories>
          
          <category> Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> GitHub </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matery官方文档</title>
      <link href="//a57e.html"/>
      <url>//a57e.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hexo-theme-matery"><a href="#hexo-theme-matery" class="headerlink" title="hexo-theme-matery"></a>hexo-theme-matery</h1><p><a href="README.md">🇺🇸English Document</a> | <a href="http://blinkfox.com/">国内访问示例 (http://blinkfox.com)</a> | <a href="https://blinkfox.github.io/">Github 部署演示示例 (https://blinkfox.github.io)</a> | QQ 交流群1（已满）: <a href="https://jq.qq.com/?_wv=1027&k=5zMDYHT"><code>926552981</code></a> | QQ 交流群2（推荐）: <a href="https://jq.qq.com/?_wv=1027&k=53q2Ayp"><code>971887688</code></a></p><blockquote><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p><ul><li><a href="https://github.com/HarborZeng">@HarborZeng</a></li><li><a href="https://github.com/shw2018">@shw2018</a></li><li><a href="https://github.com/L1cardo">@L1cardo</a></li><li><a href="https://github.com/Five-great">@Five-great</a></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>当你看到这里的时候，应该已经有一个自己的 <a href="https://hexo.io/zh-cn/">Hexo</a> 博客了。如果还没有的话，不妨使用 Hexo 和 <a href="https://www.appinn.com/markdown/">Markdown</a> 来写博客和文章。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>Git clone</code> 命令来下载:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/blinkfox/hexo-theme-matery.git</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 17:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;categories&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;categories&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 18:23:38</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;about&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">about</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 17:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;about&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;about&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;contact&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">contact</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 17:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;contact&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;contact&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="新建友情链接-friends-页（可选的）"><a href="#新建友情链接-friends-页（可选的）" class="headerlink" title="新建友情链接 friends 页（可选的）"></a>新建友情链接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;friends&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">friends</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-12-12 21:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;friends&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;friends&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[&#123;</span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span>: <span class="string">&quot;http://image.luokangyuan.com/1_qq_27922023.jpg&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;码酱&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;introduction&quot;</span>: <span class="string">&quot;我不是大佬，只是在追寻大佬的脚步&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://luokangyuan.com/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;前去学习&quot;</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span>: <span class="string">&quot;http://image.luokangyuan.com/4027734.jpeg&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;闪烁之狐&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;introduction&quot;</span>: <span class="string">&quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;https://blinkfox.github.io/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;前去学习&quot;</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span>: <span class="string">&quot;http://image.luokangyuan.com/avatar.jpg&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;ja_rome&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;introduction&quot;</span>: <span class="string">&quot;平凡的脚步也可以走出伟大的行程&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;https://me.csdn.net/jlh912008548&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;前去学习&quot;</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><h3 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h3><h4 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon."></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)<br>2.图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找   </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Index:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">Tags:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/tags</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">Categories:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/categories</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-bookmark</span></span><br><span class="line">  <span class="attr">Archives:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/archives</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">About:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/about</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-user-circle</span></span><br><span class="line">  <span class="attr">Friends:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/friends</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-address-book</span></span><br></pre></td></tr></table></figure><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作<br>1.在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)<br>2.在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.<br>3.注意每个二级菜单模块前要加 <code>-</code>.<br>4.注意缩进格式  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Index:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">Tags:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/tags</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">Categories:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/categories</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-bookmark</span></span><br><span class="line">  <span class="attr">Archives:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/archives</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">About:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/about</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-user-circle-o</span></span><br><span class="line">  <span class="attr">Friends:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/friends</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-address-book</span></span><br><span class="line">  <span class="attr">Medias:</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-list</span></span><br><span class="line">    <span class="attr">children:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Musics</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/musics</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Movies</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/movies</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-film</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Books</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/books</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-book</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Galleries</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/galleries</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-image</span></span><br></pre></td></tr></table></figure><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -S hexo-prism-plugin</span><br></pre></td></tr></table></figure><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">prism_plugin:</span></span><br><span class="line">  <span class="attr">mode:</span> <span class="string">&#x27;preprocess&#x27;</span>    <span class="comment"># realtime/preprocess</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">&#x27;tomorrow&#x27;</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">false</span>    <span class="comment"># default false</span></span><br><span class="line">  <span class="attr">custom_css:</span></span><br></pre></td></tr></table></figure><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br></pre></td></tr></table></figure><h3 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink_pinyin:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">separator:</span> <span class="string">&#x27;-&#x27;</span> <span class="comment"># default: &#x27;-&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">postInfo:</span></span><br><span class="line">  <span class="attr">date:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">update:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">wordCount:</span> <span class="literal">false</span> <span class="comment"># 设置文章字数统计为 true.</span></span><br><span class="line">  <span class="attr">totalCount:</span> <span class="literal">false</span> <span class="comment"># 设置站点文章总字数统计为 true.</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">false</span> <span class="comment"># 阅读时长.</span></span><br><span class="line">  <span class="attr">readCount:</span> <span class="literal">false</span> <span class="comment"># 阅读次数.</span></span><br></pre></td></tr></table></figure><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-github-emojis --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">githubEmojis:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">className:</span> <span class="string">github-emoji</span></span><br><span class="line">  <span class="attr">inject:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">styles:</span></span><br><span class="line">  <span class="attr">customEmojis:</span></span><br></pre></td></tr></table></figure><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></table></figure><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="添加-DaoVoice-在线聊天功能（可选的）"><a href="#添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="添加 DaoVoice 在线聊天功能（可选的）"></a>添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="添加-Tidio-在线聊天功能（可选的）"><a href="#添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="添加 Tidio 在线聊天功能（可选的）"></a>添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.socialLink.github) &#123; %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%= theme.socialLink.github %&gt;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tooltipped&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">data-tooltip</span>=<span class="string">&quot;访问我的GitHub&quot;</span> <span class="attr">data-position</span>=<span class="string">&quot;top&quot;</span> <span class="attr">data-delay</span>=<span class="string">&quot;50&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-github&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否在首页显示音乐</span></span><br><span class="line"><span class="attr">music:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">title:</span>         <span class="comment">#非吸底模式有效</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">show:</span> <span class="string">听听音乐</span></span><br><span class="line">  <span class="attr">server:</span> <span class="string">netease</span>   <span class="comment">#require music platform: netease, tencent, kugou, xiami, baidu</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">playlist</span>    <span class="comment">#require song, playlist, album, search, artist</span></span><br><span class="line">  <span class="attr">id:</span> <span class="number">503838841</span>     <span class="comment">#require song id / playlist id / album id / search keyword</span></span><br><span class="line">  <span class="attr">fixed:</span> <span class="literal">false</span>      <span class="comment"># 开启吸底模式</span></span><br><span class="line">  <span class="attr">autoplay:</span> <span class="literal">false</span>   <span class="comment"># 是否自动播放</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">&#x27;#42b983&#x27;</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="string">&#x27;all&#x27;</span>       <span class="comment"># 音频循环播放, 可选值: &#x27;all&#x27;, &#x27;one&#x27;, &#x27;none&#x27;</span></span><br><span class="line">  <span class="attr">order:</span> <span class="string">&#x27;random&#x27;</span>   <span class="comment"># 音频循环顺序, 可选值: &#x27;list&#x27;, &#x27;random&#x27;</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="string">&#x27;auto&#x27;</span>   <span class="comment"># 预加载，可选值: &#x27;none&#x27;, &#x27;metadata&#x27;, &#x27;auto&#x27;</span></span><br><span class="line">  <span class="attr">volume:</span> <span class="number">0.7</span>       <span class="comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span></span><br><span class="line">  <span class="attr">listFolded:</span> <span class="literal">true</span>  <span class="comment"># 列表默认折叠</span></span><br></pre></td></tr></table></figure><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code>获取示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，地址栏有一串数字，<code>playlist</code>的<code>id</code>即为这串数字。</p></blockquote><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">typora-vue-theme主题介绍</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-07 09:25:00</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">typora-vue-theme主题介绍</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-07 09:25:00</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">赵奇</span></span><br><span class="line"><span class="attr">img:</span> <span class="string">/source/images/xxx.jpg</span></span><br><span class="line"><span class="attr">top:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">cover:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">coverImg:</span> <span class="string">/images/1.jpg</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">summary:</span> <span class="string">这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Markdown</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Typora</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Markdown</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-7.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-8.png" alt="首页文章列表"></p><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span></span><br><span class="line"><span class="selector-class">.bg-color</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right, <span class="number">#4cbf30</span> <span class="number">0%</span>, <span class="number">#0f9d58</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> rainbow &#123;</span><br><span class="line">   <span class="comment">/* 动态切换背景颜色. */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> rainbow &#123;</span><br><span class="line">    <span class="comment">/* 动态切换背景颜色. */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.bg-cover&#x27;</span>).css(<span class="string">&#x27;background-image&#x27;</span>, <span class="string">&#x27;url(/medias/banner/&#x27;</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getDay() + <span class="string">&#x27;.jpg)&#x27;</span>);</span><br></pre></td></tr></table></figure><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h2 id="版本记录"><a href="#版本记录" class="headerlink" title="版本记录"></a>版本记录</h2><ul><li>v1.3.1<ul><li>新增了 <code>kbd</code> 样式；</li><li>修复了子目录部署时词云中链接有误的问题；</li><li>移除了 TOC 中的竖线；</li><li>修复了首页 icon 图标中的 tooltip 不显示的问题；</li><li>修复生成静态文件时，每天切换 banner 不生效的问题；</li><li>更新了 <code>miniValine</code> 中的一些配置；</li></ul></li><li>v1.3.0<ul><li>新增了支持子目录部署的功能（如：<code>Gitee</code>）；</li><li>新增了 <code>MiniValine</code> 评论系统；</li><li>新增了 <code>jsdelivr</code> 的支持；</li><li>修复了诸多发现的 bug；</li></ul></li><li>v1.2.2<ul><li>新增了自定义文章 <code>keywords</code> 的功能；</li><li>新增静态彩带点击切换的功能和配置；</li><li>将文章字数统计、彩带和站点运行时间等功能默认设置为 <code>false</code>；</li><li>修改了文章的 <code>description</code> 的 meta 属性优先读取文章的 <code>summary</code> 属性；</li><li>修改了文章标题的 HTML 标签，从 <code>div</code> 改成了 <code>h1</code> 标题；</li><li>修改了页脚年份显示不正确的问题；</li><li>去掉了站点运行时间中多余的 <code>setTimeout</code> 代码；</li></ul></li><li>v1.2.1<ul><li>新增了 TOC 的展开目录层级设置和滚动条功能，防止目录较多的时候目录溢出；</li><li>修改了首页的展示方式为以前的模式；</li><li>修复首页按钮没有边框的问题；</li><li>修复了音乐及吸底模式、视频、推荐文章等不激活时仍然生成首页卡片的问题；</li><li>修复 wordCount 插件未安装的问题，修改了部分配置；</li><li>修复音乐的 JSON 配置中有单引号的情况页面不显示的音乐的问题</li><li>修复标签云在Hexo4.0下链接失效的问题；</li></ul></li><li>v1.2.0<ul><li>新增了 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 的在线聊天功能；</li><li>新增了两级菜单的功能；</li><li>新增了打字效果的副标题；</li><li>新增了网页内容预加载的功能；</li><li>新增了首页 banner 是否每日切换的配置功能；</li><li>新增了显示 ICP 备案信息的功能，默认未开启；</li><li>新增了百度分析的配置；</li><li>新增了代码块的语言显示、一键复制、显示行号等功能；</li><li>新增了首页轮播图和推荐文章可自定义配置的功能；</li><li>新增了文章页面显示更新日期；</li><li>新增了转载规则的图标；</li><li>修改了分享的布局和显示方式；</li><li>升级更新了部分依赖库的版本；</li><li>其他细节修改和优化；</li></ul></li><li>v1.1.0<ul><li>新增了 <code>emoji</code> 的支持；</li><li>新增了站点运行时间统计及配置；</li><li>新增了留言板的功能,默认未开启；</li><li>新增了 <code>Twitter</code>、<code>Facebook</code>、知乎的社交链接；</li><li>更新了 <code>Valine</code> 的版本为最新版；</li><li>其他小细节的修改；</li></ul></li><li>v1.0.4<ul><li>新增了能为每篇文章都自定义转载规则的功能；</li><li>修复上一页、下一页的自定义 <code>summary</code> 不显示的问题；</li><li>修复了友情链接显示错位的问题，改为了瀑布流的布局方式；</li><li>其他小细节 bug 的修改；</li></ul></li><li>v1.0.3<ul><li>新增了<code>TOC</code>展开、收缩的按钮和相关配置，默认显示此按钮；</li></ul></li><li>v1.0.2<ul><li>升级了 <a href="https://materializecss.com/">Materialize</a> 框架版本为<code>1.0.0</code>，重构和修改了升级过程中的部分文件或问题；</li><li>新增了首页封面的全屏轮播特效，可以将更重要的文章设置到首页轮播中；</li><li>修复首页第一个按钮是中文的问题</li><li>修复了 iPhone 上点击搜索输入获取焦点的问题；</li><li>修复了 iPhone 上输入框获取焦点后页面放大的问题；</li><li>修复一些文章或 UI 显示问题；</li></ul></li><li>v1.0.1<ul><li>调整 <code>css</code>、<code>js</code> 的文件请求路径在主题的<code>_config.yml</code>中配置，便于你更快捷的配置自己的 CDN；</li><li>新增代码是否折行为可配置，默认为折行；</li><li>默认激活 <code>TOC</code> 功能，并新增为某篇文章关闭 <code>TOC</code> 的 <code>Front-matter</code> 配置选项；</li><li>修复文章滚动时，高亮的目录选项不准确的问题；</li><li><code>IOS</code>下移除搜索框自动获得焦点属性，防止自动获得焦点后导致视图上移；</li></ul></li><li>v1.0.0<ul><li>新增了所有基础功能；</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Others </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
